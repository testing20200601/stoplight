openapi: 3.0.0
info:
  title: ALGOGENE
  version: '1.0'
  contact:
    name: support
    url: 'https://algogene.com'
    email: support@algogene.com
  termsOfService: 'https://algogene.com/terms'
  license:
    url: 'https://algogene.com/terms'
    name: ALGOGENE
  description: This document discuss the usage of ALGOGENE REST API.
servers:
  - url: 'https://algogene.com/rest/v1'
    description: prod
paths:
  /history_price:
    get:
      summary: Market Quote
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: object
                    description: 'list of JSON object for candle stick sorted in ascending timestamp '
                    required:
                      - t
                      - o
                      - h
                      - l
                      - c
                      - b
                      - a
                      - m
                      - v
                      - instrument
                    properties:
                      t:
                        type: string
                        description: timestamp at bar closing of time zone in GMT+0
                        pattern: 'YYYY-MM-DD HH:MM:SS'
                        format: date-time
                      o:
                        type: number
                        description: open price for a particular candle bar
                        minimum: 0
                        format: float
                      h:
                        type: number
                        minimum: 0
                        format: float
                        description: highest price for a particular candle bar
                      l:
                        type: number
                        description: lowest price for a particular candle bar
                        format: float
                        minimum: 0
                      c:
                        type: number
                        format: float
                        minimum: 0
                        description: closing price for a particular candle bar
                      b:
                        type: number
                        format: float
                        minimum: 0
                        description: closing bid price for a particular candle bar
                      a:
                        type: number
                        format: float
                        minimum: 0
                        description: closing ask price for a particular candle bar
                      m:
                        type: number
                        format: float
                        minimum: 0
                        description: closing mid price for a particular candle bar
                      v:
                        type: integer
                        minimum: 1
                        description: transaction volume for a particular candle bar
                      instrument:
                        type: string
                        description: instrument name for a particular candle bar
                      expiry:
                        type: string
                        description: |-
                          only available for FUT/OPT contract,
                          expiry date for the instrument
                      right:
                        type: string
                        description: |-
                          only available for OPT contract,
                          option exercise right, 
                          'C' for call, 'P' for put
                      strike:
                        type: number
                        description: |-
                          only available for OPT contract,
                          strike price for the instrument
                        format: float
                        minimum: 0
                  count:
                    type: integer
                    description: length of returned results
                required:
                  - res
                  - count
              examples:
                Example:
                  value:
                    count: 3
                    res:
                      - a: 7.645
                        b: 7.64
                        c: 7.6425
                        expiry: ''
                        h: 7.773
                        instrument: ZARJPY
                        l: 7.64
                        m: 7.6425
                        o: 8.054
                        right: ''
                        strike: 0
                        symbol: ZARJPY
                        t: '2018-10-27 00:00:00'
                        v: 20080
                      - a: 7.692
                        b: 7.67
                        c: 7.681
                        expiry: ''
                        h: 7.706
                        instrument: ZARJPY
                        l: 7.5895
                        m: 7.681
                        o: 8.054
                        right: ''
                        strike: 0
                        symbol: ZARJPY
                        t: '2018-10-29 00:00:00'
                        v: 21051
                      - a: 7.677
                        b: 7.66
                        c: 7.6685
                        expiry: ''
                        h: 7.706
                        instrument: ZARJPY
                        l: 7.5895
                        m: 7.6685
                        o: 8.054
                        right: ''
                        strike: 0
                        symbol: ZARJPY
                        t: '2018-10-30 00:00:00'
                        v: 22699
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-query_marketprice
      parameters:
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                count:
                  type: integer
                  description: |-
                    number of bar to return, 
                    maximum is limited to 1000
                  minimum: 1
                  maximum: 1000
                  default: 1
                  example: 100
                interval:
                  type: string
                  description: |-
                    specify the candle stick interval, 
                    available value include 
                    'M','M2','M5','M10','M15','M30','H','H2','H3','H4','H6','H12','D' 
                timestamp:
                  type: string
                  format: date-time
                  pattern: 'YYYY-MM-DD HH:MM:SS'
                  description: |-
                    retrieve data with timestamp less than this specified value, 
                    time zone in GMT+0, 
                    format in “yyyy-mm-dd HH:MM:SS” 
                instrument:
                  type: string
                  description: value must be one of available instruments from /list_instrument
                expiry:
                  type: string
                  description: |-
                    only applicable for FUT/OPT contracts, 
                    expiry date in format yyyymmdd
                  format: date
                  pattern: YYYYMMDD
                right:
                  type: string
                  description: |-
                    only applicable for OPT contracts, 
                    the type exercise right of a particular Option contract,
                    only accept 'C' for call option, 'P' for put option
                  pattern: C or P
                strike:
                  type: number
                  format: float
                  minimum: 0
                  description: |-
                    only applicable for OPT contracts, 
                    the strike price of a particular Option contract
                  default: 0
                  example: 0
              required:
                - api_key
                - user
                - count
                - interval
                - timestamp
                - instrument
            examples:
              Example:
                value:
                  user: demo
                  api_key: '1234567890'
                  instrument: ZARJPY
                  count: 3
                  timestamp: '2018-10-30 00:00:00'
                  interval: D
          text/html:
            schema:
              type: object
              properties: {}
        description: ''
      description: This endpoint is used to query historical price/volume data of finanical instruments.
      tags:
        - Historical Data
    parameters: []
  /list_instrument:
    get:
      summary: Available Financial Instruments
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: length of returned results
                  res:
                    description: a list of all available financial instruments sorted in alphabetical order
                    type: array
                    items:
                      type: string
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 128
                    res:
                      - AUDCAD
                      - AUDCHF
                      - AUDHKD
                      - AUDJPY
                      - AUDNZD
                      - AUDSGD
                      - AUDUSD
                      - AUXAUD
                      - BCOUSD
                      - BTCUSD
                      - BUNDEUR
                      - CADCHF
                      - CADHKD
                      - CADJPY
                      - CADSGD
                      - CHFHKD
                      - CHFJPY
                      - CHFZAR
                      - CNXUSD
                      - CORNUSD
                      - ETXEUR
                      - EURAUD
                      - EURCAD
                      - EURCHF
                      - EURCZK
                      - EURDKK
                      - EURGBP
                      - EURHKD
                      - EURHUF
                      - EURJPY
                      - EURNOK
                      - EURNZD
                      - EURPLN
                      - EURSEK
                      - EURSGD
                      - EURTRY
                      - EURUSD
                      - EURZAR
                      - FRXEUR
                      - GBPAUD
                      - GBPCAD
                      - GBPCHF
                      - GBPHKD
                      - GBPJPY
                      - GBPNZD
                      - GBPPLN
                      - GBPSGD
                      - GBPUSD
                      - GBPZAR
                      - GRXEUR
                      - HKDJPY
                      - HKXHKD
                      - HSIFUT
                      - HSIOPT
                      - INXUSD
                      - JPXJPY
                      - MBTCUSD
                      - NATGASUSD
                      - NLXEUR
                      - NSXUSD
                      - NZDCAD
                      - NZDCHF
                      - NZDHKD
                      - NZDJPY
                      - NZDSGD
                      - NZDUSD
                      - SGDCHF
                      - SGDHKD
                      - SGDJPY
                      - SGXSGD
                      - SOYBNUSD
                      - SPXUSD
                      - SUGARUSD
                      - TN10YUSD
                      - TN2YUSD
                      - TN30YUSD
                      - TN5YUSD
                      - TRYJPY
                      - TWXUSD
                      - UDXUSD
                      - UKXGBP
                      - US2000USD
                      - US30USD
                      - USDCAD
                      - USDCHF
                      - USDCNH
                      - USDCZK
                      - USDDKK
                      - USDHKD
                      - USDHUF
                      - USDINR
                      - USDJPY
                      - USDMXN
                      - USDNOK
                      - USDPLN
                      - USDSAR
                      - USDSEK
                      - USDSGD
                      - USDTHB
                      - USDTRY
                      - USDZAR
                      - WHEATUSD
                      - WTIUSD
                      - XAGAUD
                      - XAGCAD
                      - XAGCHF
                      - XAGEUR
                      - XAGGBP
                      - XAGHKD
                      - XAGJPY
                      - XAGNZD
                      - XAGSGD
                      - XAGUSD
                      - XAUAUD
                      - XAUCAD
                      - XAUCHF
                      - XAUEUR
                      - XAUGBP
                      - XAUHKD
                      - XAUJPY
                      - XAUNZD
                      - XAUSGD
                      - XAUUSD
                      - XAUXAG
                      - XCUUSD
                      - XPDUSD
                      - XPTUSD
                      - ZARJPY
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-list_all_instrument
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
              required:
                - api_key
                - user
      tags:
        - Contract Specification
      description: |-
        This endpoint is used to list out all available financial instruments supported by ALGOGENE.
        The example below only presents a subset. More financial instruments will be available at a later stage. 
    parameters: []
  /meta_instrument:
    get:
      summary: Metadata of Financial Contract
      tags:
        - Contract Specification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: object
                    description: a JSON object for the financial contract specification
                    required:
                      - contractSize
                      - market
                      - producttype
                      - settleCurrency
                      - description
                    properties:
                      contractSize:
                        description: the number of share per 1 lot
                        type: integer
                      market:
                        type: string
                        description: |-
                          the corresponding asset market, available values ‘COM’, ‘CRYTO’, ‘ENERGY’,
                          ‘EQ’, ‘FX’, ‘IR’, ‘METAL’
                      producttype:
                        type: string
                        description: 'the product nature, available values ‘SPOT’, ‘FUT’, ‘OPT’'
                      settleCurrency:
                        type: string
                        description: the currency used for settlement
                      description:
                        type: string
                        description: description of the instrument
                required:
                  - res
              examples:
                Example:
                  value:
                    res:
                      contractSize: 100000
                      description: US Dollar VS Japanese Yen
                      market: FX
                      producttype: SPOT
                      settleCurrency: JPY
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-query_contract
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                instrument:
                  type: string
                  description: one of the financial instrument names from /list_all_instrument
              required:
                - api_key
                - user
                - instrument
        description: ''
      description: This endpoint is used to get the contract specification details of a particular financial instrument.
    parameters: []
  /history_news:
    get:
      summary: News
      tags:
        - Historical Data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: length of returned results
                  res:
                    type: object
                    description: a list of JSON object for News sorted in ascending published time
                    required:
                      - published
                      - authors
                      - title
                      - source
                      - text
                      - category
                      - link
                      - top_image
                      - movies
                    properties:
                      published:
                        type: string
                        description: published time in GMT+0 of a particular News
                      authors:
                        type: array
                        description: list of authors of a particular News
                        items:
                          type: string
                      title:
                        type: string
                        description: header/title of a particular News
                      source:
                        type: string
                        description: publisher of a particular News
                      text:
                        type: string
                        description: content of a particular News
                      category:
                        type: string
                        description: category of a particular News
                      link:
                        type: string
                        description: url link of a particular News
                      top_image:
                        type: string
                        description: url link of embedded image in a particular News
                      movies:
                        type: array
                        description: list of video links embedded in a particular News
                        items:
                          type: string
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 2
                    res:
                      - authors: '[]'
                        category: USA
                        link: 'https://news.google.com/__i/rss/rd/articles/CBMiigFodHRwczovL3d3dy5jYnNzcG9ydHMuY29tL25mbC9uZXdzL3RodXJzZGF5LW5pZ2h0LWZvb3RiYWxsLW9kZHMtbGluZS1zcHJlYWQtcmF2ZW5zLXZzLWpldHMtcGlja3Mtb3B0aW1hbC1wcmVkaWN0aW9ucy1mcm9tLWV4cGVydC13aG9zLTgtMC_SAY4BaHR0cHM6Ly93d3cuY2Jzc3BvcnRzLmNvbS9uZmwvbmV3cy90aHVyc2RheS1uaWdodC1mb290YmFsbC1vZGRzLWxpbmUtc3ByZWFkLXJhdmVucy12cy1qZXRzLXBpY2tzLW9wdGltYWwtcHJlZGljdGlvbnMtZnJvbS1leHBlcnQtd2hvcy04LTAvYW1wLw?oc=5'
                        movies: '[]'
                        published: '2019-12-13 00:00:00.000000'
                        source: CBS Sports
                        text: |-
                          The Baltimore Ravens have survived challenges from two potentially playoff-bound opponents to run their winning streak to nine games. Now, they face an improving New York Jets team seeking a signature win with an upset. The teams square off on Thursday Night Football from M&T Bank Stadium, with kickoff set for 8:20 p.m. ET. The Ravens (11-2) recorded one-score wins against the Buffalo Bills and San Francisco 49ers the past two weeks to secure the earliest playoff berth in franchise history. Baltimore is a 17-point favorite and the over-under for total points scored is 44 in the latest Ravens vs. Jets odds after opening at 45. Before locking in any Jets vs. Ravens picks or Thursday Night Football predictions, make sure you see what SportsLine expert Mike Tierney has to say.

                          The veteran sportswriter, whose work appears in The New York Times and Los Angeles Times, has covered football of all levels for decades. That expertise has been evident since he joined SportsLine in 2016, as he has been a consistent winner in both college and pro football. He enters this week as SportsLine's most profitable NFL handicapper this season, posting a record of 38-19 on his NFL picks and yielding a return of more than $1,700 for his followers.

                          What's more, Tierney has had a sharp eye for the trajectories of these clubs, posting a record of 22-6 on NFL picks against the spread on games involving the Jets or Ravens over the past two seasons. He has been particularly locked in on Baltimore and has connected on his last eight picks involving the Ravens.

                          In the Week 11 Monday Night Football matchup between the Ravens and Rams, Tierney told SportsLine members that Baltimore (-3) would overwhelm Los Angeles and recommended backing the short road favorite. The Ravens dominated in a 45-6 win, giving Tierney's followers another easy winner. Those who have consistently followed him are way up.

                          Now, he has locked in on Jets vs. Ravens from every angle and released a confident against-the-spread pick that is available at SportsLine. Go to SportsLine to see it. Here are the NFL lines and trends for Jets vs. Ravens:

                          Ravens vs. Jets spread: Ravens -17

                          Ravens vs. Jets over-under: 44 points

                          Ravens vs. Jets money line: Ravens -1416, Jets +819

                          BAL: The favorite has covered six of the past eight meetings.

                          NYJ: Sam Darnold has nine total touchdowns in last four games.

                          Tierney knows Baltimore quarterback Lamar Jackson is active for Thursday Night Football even though he suffered a quad injury suffered against Buffalo. He has been limited in practice this week, but has repeatedly told the media he feels "great." He has expressed similar sentiments on his social media accounts.

                          The second-year quarterback is believed to be front-runner in the league MVP race and he has a chance to build on a memorable season. Jackson already has become the first NFL quarterback to throw for more than 2,500 yards and rush for more than 1,000 yards in a season. He has 441 rushing yards and four touchdowns over his past six games.

                          Still, Baltimore isn't assured of covering the Ravens vs. Jets spread against a New York club that has seen a resurgence in the second half of the season.

                          The Jets can take confidence from the fact that they notched their first AFC East victory last Sunday despite missing running back Le'Veon Bell and safety Jamal Adams. Bell missed the game because of an illness, but is expected to be available Thursday. Adams sat out because of a sprained left ankle and is doubtful for Thursday Night Football.

                          Darnold withstood having his hand stepped on to lead New York on its game-winning drive. The quarterback told the media the injury wasn't serious, just minor bruising, and he is not listed on the team's injury report. Darnold has thrown nine touchdowns against two interceptions in the past five games.

                          We can tell you Tierney is leaning under the total, but his much stronger play is on the spread. He's found a critical x-factor that makes one side of the spread hit hard on Thursday Night Football. He's sharing what it is, and who to back, only at SportsLine.

                          Who wins Jets vs. Ravens on Thursday Night Football? And what critical x-factor makes one side of the spread a must-back? Visit SportsLine now to see which side of the Jets vs. Ravens spread you should be all over Thursday, all from the football expert who has hit eight straight picks involving Baltimore.
                        title: 'Thursday Night Football odds, line, spread: Ravens vs. Jets picks, top predictions from expert who''s 8-0'
                        top_image: 'https://sportshub.cbsistatic.com/i/r/2019/11/26/37678b3e-e189-4531-be5a-1dc8b83dc92a/thumbnail/1200x675/8eae3c79eebd9d879728f64ed8a9d51a/jacksonrams.png'
                      - authors: '[]'
                        category: WORLD
                        link: 'http://world.people.com.cn/n1/2019/1213/c1002-31505023.html'
                        movies: '[]'
                        published: '2019-12-13 00:00:00.000000'
                        source: PeopleDaily
                        text: |-
                          人民网讯 当地时间12月12日，在加拿大的哈德逊湾，两只北极熊正在互相打闹，其中一只被打得举熊掌“投降”，场面十分逗趣。

                          人 民 网 版 权 所 有 ，未 经 书 面 授 权 禁 止 使 用

                          Copyright © 1997-2019 by www.people.com.cn. all rights reserved
                        title: 嘴掌并用！两只北极熊互相推搡打闹画面十分逗趣--国际--人民网
                        top_image: 'http://world.people.com.cn/NMediaFile/2019/1204/MAIN201912040900000328482192250.jpg'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
      operationId: get-query_news
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                count:
                  type: integer
                  description: 'number of News to return, maximum is restricted to 100 for server efficiency'
                starttime:
                  type: string
                  description: 'retrieve data with timestamp greater than this specified value, format in “yyyy-mm-dd hh:mm:ss”'
                endtime:
                  type: string
                  description: 'retrieve data with timestamp less than this specified value, format in “yyyy-mm-dd hh:mm:ss”'
                lang:
                  type: string
                  description: |-
                    language of News to retrieve, language codes follows [ISO 639-1 codes], available values
                    include
                    ‘af','ar','bg','bn','ca','cs','cy','da','de','el','en','es','et','fa','fi','fr','gu','he','hi','hr','hu','id','it','ja','kn','ko
                    ','lt','lv','mk','ml','mr','ne','nl','no','pa','pl','pt','ro','ru','sk','sl','so','sq','sv','sw','ta','te','th','tl','tr','uk','
                    ur','vi','zh-cn','zh-tw'
                category:
                  type: string
                  description: |-
                    Avaiable values include 'AFRICA', 'AGRICULTURE', 'AMERICAS', 'ART', 'ASIA', 'ASSET_SALES', 'AUSTRALIA', 'AUTO', 'BIOTECH', 'BOND', 'BOOK', 'BOTsWANA', 'BUSINESS', 'BUYBACK', 'CANADA', 'CENTRAL_ASIA', 'CHINA', 'COMMENTARY', 'COMMODITY', 'COMMUNITY', 'COMPANY', 'COMPANY NEWS', 'CONTRACT', 'CULTURE', 'DIPLOMACY', 'DIVIDENDS', 'EARNINGS', 'EAST_ASIA', 'ECONOMY', 'EDUCATION', 'EMERGING_MARKET', 'ENERGY', 'ENTERTAINMENT', 'ENVIRONMENT', 'ETF', 'ETHIOPIA', 'EUROPE', 'EVENT', 'FASHION', 'FDA', 'FEDERAL_RESERVE', 'FINANCE', 'FINANCING', 'FINTECH', 'FOREX', 'FORUM', 'FRANCE', 'FUND', 'FUTURE', 'GENERAL', 'GEOPOLITICS', 'GERMANY', 'GHANA', 'HEALTH', 'HEIDI', 'HISTORY', 'HONG KONG', 'HOT', 'HOUSE', 'INDIA', 'INDONESIA', 'INSIDER_TRADE', 'INTERNET', 'INTERVIEW', 'IPO', 'IRELAND', 'ISRAEL', 'ITALIA', 'JAPAN', 'KENYA', 'KOREA', 'LATIN_AMERICA', 'LATVIA', 'LAW', 'LEGAL', 'LIFESTYLE', 'LOGISTICS', 'M&A', 'MALAYSIA', 'MANAGEMENT', 'MEDIA', 'MIDDLE_EAST', 'MILITARY', 'MONEY', 'MOVIES', 'NAMIBIA', 'NATION', 'NEW_ZEALAND', 'NIGERIA', 'NORTH_KOREA', 'OFFERING', 'OPINION', 'OPTION', 'PAKISTAN', 'PEOPLE', 'PETS', 'PHILIPPINES', 'PICTURES', 'POLITICS', 'POLLS', 'POSTAL', 'PRESS', 'RATING', 'REAL_ESTATE', 'REAL_TIME', 'REGION', 'RESEARCH', 'RETAIL_SALES', 'REVIEW', 'RUMORS', 'RUSSIA', 'SCIENCE', 'SINGAPORE', 'SMALL_CAP', 'SOCIALS', 'SOUTHEAST_ASIA', 'SOUTH_AFRICA', 'SOUTH_ASIA', 'SPEECH', 'SPORT', 'SPORT_BOXING', 'SPORT_GOLF', 'SPORT_RACING', 'SPORT_RUGBY', 'SPORT_SOCCER', 'SPORT_TENNIS', 'STATISITCS', 'STOCK', 'STOCK_SPLIT', 'STORY', 'TAIWAN', 'TANZANIA', 'TECHNOLOGY', 'TELECOMS', 'TOP', 'TOURISM', 'TRAFFIC', 'TRAVEL', 'TURKEY', 'UGANDA', 'UK', 'US', 'USA', 'WEATHER', 'WORLD', 'ZIMBABWE'; 
                    Multiple category separated by ","
                source:
                  type: string
                  description: |-
                    Available values include 'APPLE_DAILY', 'AsahiNews', 'BBC', 'CHOSUM', 'CNN', 'DW_NEWS', 'FACEBOOK', 'GOOGLE', 'GOV.HK', 'HKFP', 'InsiderInsight', 'JTBC', 'JapanIndustryNews', 'KBS', 'KyodoNews', 'LivedoorNews', 'MARKETWATCH', 'NDTV', 'NHK', 'NipponNews', 'ORIENTAL_DAILY', 'PeopleDaily', 'REUTERS', 'RTHK', 'SoraNews', 'TRT', 'UDN', 'WallStreetJournal', 'YAHOO', 'Yonhap', 'aamacau', 'bastillepost', 'benzinga', 'feedburner', 'feedx', 'heraldcorp', 'hkcnews', 'hkjam', 'inmediahk', 'japaninsides', 'japantimes', 'japantoday', 'koreaherald', 'koreatimes', 'litenews', 'localpresshk', 'mcnews', 'memehk', 'newsonjapan', 'nytimes', 'pentoy', 'philstar', 'polymerhk', 'post852', 'scmp', 'thebridge', 'theinitium', 'thejapannews', 'thestandnews', 'tmhk', 'tokyoreporter', 'voachinese', 'yahoo', 'zakzak', 'zhihu'
                    Mutiple source separated by ","
              required:
                - api_key
                - user
                - count
                - starttime
                - endtime
                - lang
      description: This endpoint is used to query historical News.
    parameters: []
  /dev_tree:
    get:
      summary: Development Tree
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  numOfBranch:
                    type: integer
                    description: Total number of strategy branch developed by user
                  res:
                    type: object
                    description: |-
                      a JSON object for the full strategy development branch history (in parent, child, sibling
                      structure)
                required:
                  - numOfBranch
                  - res
              examples:
                Example:
                  value:
                    numOfBranch: 2
                    res:
                      '20200325_041638_279000':
                        '20200325_043404_549000':
                          '20200325_045304_197000':
                            '20200325_061011_400000': {}
                            '20200412_123923_298000':
                              '20200412_125649_253000': {}
                        '20200325_044033_341000': {}
                      '20200325_055841_183000': {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
      operationId: get-query_strategy_devtree
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
              required:
                - api_key
                - user
      tags:
        - Strategy Development
      description: 'This endpoint is used to get the whole strategy development tree from ALGOGENE online backtest history. '
    parameters: []
  /dev_node:
    get:
      summary: Development Node
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  parent:
                    type: string
                    description: the parent node for runtime ID along the development branch
                  childs:
                    description: a list of direct child nodes following runtime ID node.
                    type: array
                    items:
                      type: string
                  siblings:
                    description: a list of sibling nodes that developed from the same parent node.
                    type: array
                    items:
                      type: string
                required:
                  - parent
              examples:
                Example:
                  value:
                    parent: ''
                    childs:
                      - '20200325_043404_549000'
                      - '20200325_044033_341000'
                    siblings:
                      - '20200325_055841_183000'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-query_strategy_devnode
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runtime_id:
                  type: string
                  description: the strategy runtime ID in development tree
              required:
                - api_key
                - user
                - runtime_id
        description: ''
      description: This endpoint is used to get the direct parent-child nodes of a particular strategy from ALGOGENE online backtest history.
      tags:
        - Strategy Development
    parameters: []
  /strategy_stats:
    get:
      summary: Settings & Performance Statistics
      tags:
        - Strategy Details
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  settings:
                    type: object
                    description: a JSON object specifying the strategy initial setting.
                    required:
                      - BaseCurrency
                      - strategyName
                      - subscribeList
                      - allowShortSell
                      - isEconstatFeedon
                      - isNewsFeedOn
                      - isWeatherFeedOn
                    properties:
                      BaseCurrency:
                        type: string
                        description: the account currency base
                      strategyName:
                        type: string
                        description: your specified strategy name
                      subscribeList:
                        type: array
                        description: 'the list of trading instruments '
                        items:
                          type: string
                      allowShortSell:
                        type: boolean
                        description: specify whether your strategy or account can perform short-selling
                      isEconstatFeedon:
                        type: boolean
                        description: specify whether your strategy listening on data stream of economic statistics
                      isNewsFeedOn:
                        type: boolean
                        description: specify whether your strategy listening on data stream of News
                      isWeatherFeedOn:
                        type: boolean
                        description: specify whether your strategy listening on data stream of weather
                  performance:
                    description: a JSON object of strategy performance statistics
                    type: object
                    required:
                      - Acdate
                      - AnnualSharpe
                      - AnnualSortino
                      - AvgConsLoss
                      - AvgConsWin
                      - AvgDrawdownDuration
                      - AvgPerDayPL
                      - AvgPerTradePL
                      - DailySharpe
                      - DailySortino
                      - DownsideDailyStdDev
                      - MeanAnnualReturn
                      - MeanDailyReturn
                      - MedianDailyReturn
                      - OddRatio
                      - PlainDailyStdDev
                      - Q1DailyReturn
                      - Q3DailyReturn
                      - Score_Total
                      - TotalPnL
                      - TradableDay
                      - TradeCnt
                      - WinRate
                      - c95_1DVaR
                      - c99_1DVaR
                      - maxConsLossAmt
                      - maxConsLossDay
                      - maxConsWinAmt
                      - maxConsWinDay
                      - maxDrawdownDuration
                      - maxDrawdown_amt
                      - maxDrawdown_pct
                      - numLossDay
                      - numWinDay
                      - PlainAnnStdDev
                    properties:
                      Acdate:
                        type: string
                        description: 'the accounting date where performance is evaluated upto '
                      AnnualSharpe:
                        type: number
                        description: Annualized Sharpe ratio
                      AnnualSortino:
                        type: number
                        description: Annualized Sortino ratio
                      AvgConsLoss:
                        type: number
                        description: Average amount of consecutive loss
                      AvgConsWin:
                        type: number
                        description: Average amount of consecutive win
                      AvgDrawdownDuration:
                        type: number
                        description: Average Drawdown Duration in day
                      AvgPerDayPL:
                        type: number
                        description: Average daily profit/loss
                      AvgPerTradePL:
                        type: number
                        description: Average profit/loss per trade
                      DailySharpe:
                        type: number
                        description: Daily Sharpe ratio
                      DailySortino:
                        type: number
                        description: Daily Sortino ratio
                      DownsideDailyStdDev:
                        type: number
                        description: Daily down-side volatility
                      MeanAnnualReturn:
                        type: number
                        description: Average of annual return
                      MeanDailyReturn:
                        type: number
                        description: Average of daily return
                      MedianDailyReturn:
                        type: number
                        description: Median of daily return
                      OddRatio:
                        type: number
                        description: odd ratio
                      PlainDailyStdDev:
                        type: number
                        description: daily volatility
                      Q1DailyReturn:
                        type: number
                        description: 1st quantile of daily return
                      Q3DailyReturn:
                        description: 3rd quantile of daily return
                        type: number
                      Score_Total:
                        type: number
                        description: overall strategy score
                      TotalPnL:
                        type: number
                        description: total amount of profit/loss
                      TradableDay:
                        type: integer
                        description: number of tradable day during the trading period
                      TradeCnt:
                        type: integer
                        description: total number of trades during the trading period
                      WinRate:
                        type: number
                        description: strategy winning rate
                      c95_1DVaR:
                        type: number
                        description: 95% 1-day value-at-risk
                      c99_1DVaR:
                        type: number
                        description: 99% 1-day value-at-risk
                      maxConsLossAmt:
                        type: number
                        description: maximum consecutive loss amount
                      maxConsLossDay:
                        type: integer
                        description: longest number of day for consecutive loss
                      maxConsWinAmt:
                        type: number
                        description: maximum consecutive win amount
                      maxConsWinDay:
                        type: number
                        description: longest number of day for consecutive winning
                      maxDrawdownDuration:
                        type: integer
                        description: longest drawdown duration
                      maxDrawdown_amt:
                        type: number
                        description: maximum drawdown amount
                      maxDrawdown_pct:
                        type: number
                        description: maximum drawdown in percentage
                      numLossDay:
                        type: number
                        description: total number of lossing day during the trading period
                      numWinDay:
                        description: total number of winning day during the trading period
                        type: number
                      PlainAnnStdDev:
                        type: number
                        description: Annualized volatility
                required:
                  - settings
                  - performance
              examples:
                Example:
                  value:
                    performance:
                      Acdate: '2020-01-31 00:00:00'
                      AnnualSharpe: 0.7166122085656221
                      AnnualSortino: 0.8043711913536009
                      AvgConsLoss: 1.8285714285714285
                      AvgConsWin: 1.0857142857142856
                      AvgDrawdownDuration: 15.583333333333334
                      AvgPerDayPL: 47.36691666666674
                      AvgPerTradePL: 170.52090000000027
                      DailySharpe: 0.04514232596041397
                      DailySortino: 0.050670622240628
                      DownsideDailyStdDev: 0.011136366282438123
                      MeanAnnualReturn: 0.1422002254757336
                      MeanDailyReturn: 0.0005642866090306889
                      MedianDailyReturn: 0
                      OddRatio: 0.8947368421052632
                      PlainDailyStdDev: 0.012500166906010137
                      Q1DailyReturn: -0.0005070316675807596
                      Q3DailyReturn: 0.005085581962306018
                      Score_Total: 51.531357678855066
                      TotalPnL: 1705.2090000000026
                      TradableDay: 36
                      TradeCnt: 10
                      WinRate: 0.4722222222222222
                      c95_1DVaR: -0.005069969039582655
                      c99_1DVaR: -0.04679992901351671
                      maxConsLossAmt: -6682.4619999999995
                      maxConsLossDay: 9
                      maxConsWinAmt: 3909.320000000007
                      maxConsWinDay: 5
                      maxDrawdownDuration: 33
                      maxDrawdown_amt: 6682.4619999999995
                      maxDrawdown_pct: 0.06682462
                      numLossDay: 19
                      numWinDay: 17
                      score_AnnualSharpe: 67.1860566519164
                      score_AvgDrawdownDuration: 65.81352833638026
                      score_Rsquare: 0.003902148470089179
                      score_TradePerDay: 76.34412630770323
                      score_WinRate: 46.246518739771496
                      score_maxDrawdown_pct: 53.594013888888895
                      simpleReturn: 0.014914588534233886
                    setting:
                      BaseCurrency: HKD
                      EndDate: 2020-02
                      InitialCapital: '100000.0'
                      Leverage: '1.0'
                      StartDate: 2018-01
                      TradeCost: '0.0'
                      allowShortSell: 'True'
                      dataset: '1440'
                      isEconstatFeedon: 'False'
                      isNewsFeedOn: 'False'
                      isWeatherFeedOn: 'False'
                      p_devnode: '20200412_123923_298000'
                      strategyName: MA
                      subscribeList:
                        - HKXHKD
                      user_parms:
                        - MA_b0
                        - MA_b1
                        - MA_b2
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
        '':
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  settings:
                    type: object
                    description: a JSON object specifying the strategy initial setting.
                    properties:
                      BaseCurrency:
                        type: string
                      EndDate:
                        type: string
                      InitialCapital:
                        type: number
                      Leverage:
                        type: number
                      StartDate:
                        type: string
                      TradeCost:
                        type: number
                      allowShortSell:
                        type: boolean
                      dataset:
                        type: number
                      isEconstatFeedon:
                        type: boolean
                      isWeatherFeedOn:
                        type: boolean
                      p_devnode:
                        type: string
                      strategyName:
                        type: string
                      subscribeList:
                        type: array
                        items:
                          type: string
                      user_parms:
                        type: array
                        items:
                          type: string
                  performance:
                    type: object
                    description: a JSON object of strategy performance statistics
                    properties:
                      Acdate:
                        type: string
                      AnnualSharpe:
                        type: number
                      AnnualSortino:
                        type: number
                      AvgConsLoss:
                        type: number
                      AvgConsWin:
                        type: number
                      AvgDrawdownDuration:
                        type: number
                      AvgPerDayPL:
                        type: number
                      DailySharpe:
                        type: number
                      DailySortino:
                        type: number
                      DownsideDailyStdDev:
                        type: number
                      MeanAnnualReturn:
                        type: number
                      MeanDailyReturn:
                        type: number
                      MedianDailyReturn:
                        type: number
                      OddRatio:
                        type: number
                      PlainDailyStdDev:
                        type: number
                      Q1DailyReturn:
                        type: number
                      Q3DailyReturn:
                        type: number
                      Score_Total:
                        type: number
                      TotalPnL:
                        type: number
                      TradableDay:
                        type: number
                      TradeCnt:
                        type: integer
                      WinRate:
                        type: number
                      c95_1DVaR:
                        type: number
                      c99_1DVaR:
                        type: number
                      maxConsLossAmt:
                        type: number
                      maxConsLossDay:
                        type: number
                      maxConsWinAmt:
                        type: number
                      maxConsWinDay:
                        type: number
                      maxDrawdownDuration:
                        type: number
                      maxDrawdown_amt:
                        type: number
                      maxDrawdown_pct:
                        type: number
                      numLossDay:
                        type: boolean
                      numWinDay:
                        type: boolean
                      score_AnnualSharpe:
                        type: number
                      score_AvgDrawdownDuration:
                        type: number
                      score_Rsquare:
                        type: number
                      score_TradePerDay:
                        type: number
                      score_WinRate:
                        type: number
                      score_maxDrawdown_pct:
                        type: number
                      simpleReturn:
                        type: number
                required:
                  - settings
                  - performance
              examples:
                Example:
                  value:
                    performance:
                      Acdate: '2020-01-31 00:00:00'
                      AnnualSharpe: 0.7166122085656221
                      AnnualSortino: 0.8043711913536009
                      AvgConsLoss: 1.8285714285714285
                      AvgConsWin: 1.0857142857142856
                      AvgDrawdownDuration: 15.583333333333334
                      AvgPerDayPL: 47.36691666666674
                      AvgPerTradePL: 170.52090000000027
                      DailySharpe: 0.04514232596041397
                      DailySortino: 0.050670622240628
                      DownsideDailyStdDev: 0.011136366282438123
                      MeanAnnualReturn: 0.1422002254757336
                      MeanDailyReturn: 0.0005642866090306889
                      MedianDailyReturn: 0
                      OddRatio: 0.8947368421052632
                      PlainDailyStdDev: 0.012500166906010137
                      Q1DailyReturn: -0.0005070316675807596
                      Q3DailyReturn: 0.005085581962306018
                      Score_Total: 51.531357678855066
                      TotalPnL: 1705.2090000000026
                      TradableDay: 36
                      TradeCnt: 10
                      WinRate: 0.4722222222222222
                      c95_1DVaR: -0.005069969039582655
                      c99_1DVaR: -0.04679992901351671
                      maxConsLossAmt: -6682.4619999999995
                      maxConsLossDay: 9
                      maxConsWinAmt: 3909.320000000007
                      maxConsWinDay: 5
                      maxDrawdownDuration: 33
                      maxDrawdown_amt: 6682.4619999999995
                      maxDrawdown_pct: 0.06682462
                      numLossDay: 19
                      numWinDay: 17
                      score_AnnualSharpe: 67.1860566519164
                      score_AvgDrawdownDuration: 65.81352833638026
                      score_Rsquare: 0.003902148470089179
                      score_TradePerDay: 76.34412630770323
                      score_WinRate: 46.246518739771496
                      score_maxDrawdown_pct: 53.594013888888895
                      simpleReturn: 0.014914588534233886
                    setting:
                      BaseCurrency: HKD
                      EndDate: 2020-02
                      InitialCapital: '100000.0'
                      Leverage: '1.0'
                      StartDate: 2018-01
                      TradeCost: '0.0'
                      allowShortSell: 'True'
                      dataset: '1440'
                      isEconstatFeedon: 'False'
                      isNewsFeedOn: 'False'
                      isWeatherFeedOn: 'False'
                      p_devnode: '20200412_123923_298000'
                      strategyName: MA
                      subscribeList:
                        - HKXHKD
                      user_parms:
                        - MA_b0
                        - MA_b1
                        - MA_b2
      operationId: get-query_strategy
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runtime_id:
                  type: string
                  description: 'the backtest strategy runtime ID, or livetest/livetrade account ID'
                runmode:
                  type: string
                  description: 'strategy run mode, value either in ‘backtest’,’livetest’,’livetrade’'
                acdate:
                  type: string
                  description: |-
                    the accounting date to retrieve the details, value in “YYYY-MM-DD” format; omitted or
                    empty will return the full history
              required:
                - api_key
                - user
                - runtime_id
                - runmode
                - acdate
        description: ''
      description: This endpoint is used to query a particular strategy settings and performance statistics.
    parameters: []
  /strategy_pl:
    get:
      summary: History of Daily Cumulative P/L
      tags:
        - Strategy Details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: length of returned result
                  res:
                    type: object
                    required:
                      - Acdate
                      - TotalPL
                      - …
                    description: a list of JSON object sorted in ascending time
                    properties:
                      Acdate:
                        type: string
                        description: accounting date
                      TotalPL:
                        type: string
                        description: sum of cumulative P/L of all traded instrument(s)
                      …:
                        type: string
                        description: P/L breakdown for all other traded instrument(s)
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 145
                    res:
                      - Acdate: '2019-01-02'
                        HKXHKD: 0
                        TotalPL: 0
                      - Acdate: '2019-01-04'
                        HKXHKD: 0
                        TotalPL: 0
                      - Acdate: '2019-12-11'
                        HKXHKD: 1055.1
                        TotalPL: 1055.1
                      - Acdate: '2019-12-13'
                        HKXHKD: 1020.1
                        TotalPL: 1020.1
                      - Acdate: '2019-12-16'
                        HKXHKD: 1020.1
                        TotalPL: 1020.1
                      - Acdate: '2019-12-18'
                        HKXHKD: 1020.1
                        TotalPL: 1020.1
                      - Acdate: '2019-12-20'
                        HKXHKD: 1020.1
                        TotalPL: 1020.1
                      - Acdate: '2019-12-23'
                        HKXHKD: 1020.1
                        TotalPL: 1020.1
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-query_strategy_pl
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runtime_id:
                  type: string
                  description: 'the backtest strategy runtime ID, or livetest/livetrade account ID'
                runmode:
                  type: string
                  description: 'strategy run mode, value either in ‘backtest’,’livetest’,’livetrade’'
                acdate:
                  type: string
                  description: |-
                    the accounting date to retrieve the details, value in “YYYY-MM-DD” format; omitted or
                    empty will return the full history
              required:
                - api_key
                - user
                - runtime_id
                - runmode
                - acdate
        description: ''
      description: This endpoint is used to query the history of daily cumulative profit/loss of a particular trading strategy.
    parameters: []
  /strategy_pos:
    get:
      summary: History of Daily Outstanding Inventory
      tags:
        - Strategy Details
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: length of returned result
                  res:
                    type: object
                    required:
                      - Acdate
                      - ...
                    description: a list of JSON object sorted in ascending time
                    properties:
                      Acdate:
                        type: string
                        description: accounting date
                      ...:
                        type: string
                        description: inventory breakdown for all traded instrument(s)
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 145
                    res:
                      - Acdate: '2019-01-02'
                        HKXHKD: 0
                      - Acdate: '2019-01-04'
                        HKXHKD: 0
                      - Acdate: '2019-12-05'
                        HKXHKD: -1
                      - Acdate: '2019-12-09'
                        HKXHKD: -1
                      - Acdate: '2019-12-11'
                        HKXHKD: -1
                      - Acdate: '2019-12-13'
                        HKXHKD: 0
                      - Acdate: '2019-12-16'
                        HKXHKD: 0
                      - Acdate: '2019-12-18'
                        HKXHKD: 0
                      - Acdate: '2019-12-20'
                        HKXHKD: 0
                      - Acdate: '2019-12-23'
                        HKXHKD: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-query_strategy_pos
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runtime_id:
                  type: string
                  description: 'the backtest strategy runtime ID, or livetest/livetrade account ID'
                runmode:
                  type: string
                  description: 'strategy run mode, value either in ‘backtest’,’livetest’,’livetrade’'
                acdate:
                  type: string
                  description: |-
                    the accounting date to retrieve the details, value in “YYYY-MM-DD” format; omitted or
                    empty will return the full history
              required:
                - api_key
                - user
                - runtime_id
                - runmode
                - acdate
      description: This endpoint is used to query the daily history of position of a particular trading strategy.
    parameters: []
  /strategy_bal:
    get:
      summary: History of Daily Account Balance
      tags:
        - Strategy Details
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: length of returned result
                  res:
                    type: object
                    description: a list of JSON object sorted in ascending time
                    required:
                      - Acdate
                      - NAV
                      - available_Balance
                      - deposit
                      - margin_Used
                      - realized_PL
                      - unrealized_PL
                    properties:
                      Acdate:
                        type: string
                        description: ' accounting date'
                      NAV:
                        description: Net Asset Value as of accounting date
                        type: number
                      available_Balance:
                        description: Available Balance as of accounting date
                        type: number
                      deposit:
                        description: 'Cash inflow/outflow on accounting date, positive for in-flow and negative for out-flow'
                        type: number
                      margin_Used:
                        description: outstanding margin usage as of accounting date
                        type: number
                      realized_PL:
                        description: Cumulative realized P/L as of accounting date
                        type: number
                      unrealized_PL:
                        description: Cumulative realized P/L as of accounting date
                        type: number
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 145
                    res:
                      - Acdate: '2019-01-02'
                        NAV: 100000
                        available_Balance: 100000
                        deposit: 0
                        margin_Used: 0
                        realized_PL: 0
                        unrealized_PL: 0
                      - Acdate: '2019-01-04'
                        NAV: 100000
                        available_Balance: 100000
                        deposit: 0
                        margin_Used: 0
                        realized_PL: 0
                        unrealized_PL: 0
                      - Acdate: '2019-12-16'
                        NAV: 101020.1
                        available_Balance: 101020.1
                        deposit: 0
                        margin_Used: 0
                        realized_PL: 0
                        unrealized_PL: 1020.1
                      - Acdate: '2019-12-18'
                        NAV: 101020.1
                        available_Balance: 101020.1
                        deposit: 0
                        margin_Used: 0
                        realized_PL: 0
                        unrealized_PL: 1020.1
                      - Acdate: '2019-12-20'
                        NAV: 101020.1
                        available_Balance: 101020.1
                        deposit: 0
                        margin_Used: 0
                        realized_PL: 0
                        unrealized_PL: 1020.1
                      - Acdate: '2019-12-23'
                        NAV: 101020.1
                        available_Balance: 101020.1
                        deposit: 0
                        margin_Used: 0
                        realized_PL: 0
                        unrealized_PL: 1020.1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-query_strategy_bal
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runtime_id:
                  type: string
                  description: 'the backtest strategy runtime ID, or livetest/livetrade account ID'
                runmode:
                  type: string
                  description: 'strategy run mode, value either in ‘backtest’,’livetest’,’livetrade’'
                acdate:
                  type: string
                  description: 'the accounting date to retrieve the details, value in “YYYY-MM-DD” format; omitted or empty will return the full history'
              required:
                - api_key
                - user
                - runtime_id
                - runmode
                - acdate
      description: This endpoint is used to query the history of account balance and margin usage of a particular trading strategy.
    parameters: []
  /strategy_param:
    get:
      summary: History of Daily User-Defined-Variables
      tags:
        - Strategy Details
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: length of returned result
                  res:
                    type: object
                    required:
                      - Acdate
                      - ...
                    description: a list of JSON object sorted in ascending time
                    properties:
                      Acdate:
                        type: string
                        description: accounting date
                      ...:
                        type: string
                        description: other user-defined variables
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 317
                    res:
                      - Acdate: '2018-01-04 00:00:00'
                        MA_b0: 29850.585203758743
                        MA_b1: 1.6925825997246537
                        MA_b2: -0.982565438662998
                        fastperiod: 7
                        slowperiod: 50
                        stoploss: 0.05
                        takeprofit: 0.05
                      - Acdate: '2018-01-08 00:00:00'
                        MA_b0: 30332.571462415664
                        MA_b1: 1.5623168483635732
                        MA_b2: -0.8569310571330406
                        fastperiod: 7
                        slowperiod: 50
                        stoploss: 0.05
                        takeprofit: 0.05
                      - Acdate: '2018-01-10 00:00:00'
                        MA_b0: 30557.249673961935
                        MA_b1: 1.5478608409385135
                        MA_b2: -0.7384312526095704
                        fastperiod: 7
                        slowperiod: 50
                        stoploss: 0.05
                        takeprofit: 0.05
                      - Acdate: '2020-02-21 00:00:00'
                        MA_b0: 27078.60957203283
                        MA_b1: 0.9679130020035266
                        MA_b2: -0.09737451065220355
                        fastperiod: 7
                        slowperiod: 50
                        stoploss: 0.05
                        takeprofit: 0.05
                      - Acdate: '2020-02-24 00:00:00'
                        MA_b0: 27012.960265153473
                        MA_b1: 0.9833455380758334
                        MA_b2: -0.1141563221402843
                        fastperiod: 7
                        slowperiod: 50
                        stoploss: 0.05
                        takeprofit: 0.05
                      - Acdate: '2020-02-26 00:00:00'
                        MA_b0: 27058.065733719406
                        MA_b1: 1.003164995430678
                        MA_b2: -0.14734270435942237
                        fastperiod: 7
                        slowperiod: 50
                        stoploss: 0.05
                        takeprofit: 0.05
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-query_strategy_param
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runtime_id:
                  type: string
                  description: 'the backtest strategy runtime ID, or livetest/livetrade account ID'
                runmode:
                  type: string
                  description: 'strategy run mode, value either in ‘backtest’,’livetest’,’livetrade’'
                acdate:
                  type: string
                  description: 'the accounting date to retrieve the details, value in “YYYY-MM-DD” format; omitted or empty will return the full history'
              required:
                - api_key
                - user
                - runtime_id
                - runmode
                - acdate
        description: ''
      description: This endpoint is used to query the history of user-defined training parameters of a particular trading strategy.
    parameters: []
  /strategy_trade:
    get:
      summary: History of Transactions
      tags:
        - Strategy Details
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: ' length of returned result'
                  res:
                    type: object
                    description: a list of JSON object sorted in ascending time
                    required:
                      - timestamp
                      - symbol
                      - buysell
                      - openclose
                      - volume
                      - price
                      - trade_ID
                      - order_ref
                      - channel
                      - market
                      - product_type
                      - broker
                      - TradeCost
                      - realized_pl
                      - ticket_id
                      - unrealized_pl
                    properties:
                      timestamp:
                        type: string
                        description: 'the timestamp for an order execution, format in ''YYYY-MM-DD hh:mm:ss.ffffff'', time zone in GMT+0'
                      symbol:
                        type: string
                        description: the transaction security symbol
                      buysell:
                        type: integer
                        description: 1 for a buy order; -1 for a sell order
                      openclose:
                        type: string
                        description: ‘open’ for opening a new order; ‘close’ for closing an existing order
                      volume:
                        description: number of transacted share
                        type: number
                      price:
                        type: number
                        description: the transacted price
                      trade_ID:
                        description: the system ID for an transaction
                        type: integer
                      order_ref:
                        type: string
                        description: user specified reference/messages
                      channel:
                        type: string
                        description: 'the channel to place the trade, returned value in ''web'',''api'',''manual'''
                      market:
                        type: string
                        description: the asset market of the transacted security
                      product_type:
                        type: string
                        description: the product type of the transacted security
                      broker:
                        type: string
                        description: the broker/counterparty of the transaction
                      TradeCost:
                        type: number
                        description: 'the amount of transaction cost, unit in account currency'
                      realized_pl:
                        type: number
                        description: 'the realized profit/loss for a closed order, unit in account currency'
                      ticket_id:
                        type: string
                        description: the transaction ID generated from broker
                      unrealized_pl:
                        type: number
                        description: 'the unrealized profit/loss for an outstanding trade, unit in account currency'
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 2
                    res:
                      - TradeCost: 0
                        broker: ALGOGENE
                        buysell: 1
                        channel: web
                        market: FX
                        openclose: open
                        order_ref: ''
                        price: 1.028
                        product_type: SPOT
                        realized_pl: '0.0'
                        symbol: EURUSD
                        ticket_id: '399'
                        timestamp: '2020-09-14 10:37:52.309000'
                        trade_ID: 399
                        unrealized_pl: '0.0'
                        volume: 1000
                      - TradeCost: 0
                        broker: ALGOGENE
                        buysell: 1
                        channel: api
                        market: FX
                        openclose: open
                        order_ref: my new reference
                        price: 1.086
                        product_type: SPOT
                        realized_pl: '0.0'
                        symbol: EURUSD
                        ticket_id: '403'
                        timestamp: '2020-09-14 17:30:52.309000'
                        trade_ID: 403
                        unrealized_pl: '0.0'
                        volume: 1000
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-query_strategy_trade
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runtime_id:
                  type: string
                  description: 'the backtest strategy runtime ID, or livetest/livetrade account ID'
                runmode:
                  type: string
                  description: 'strategy run mode, value either in ‘backtest’,’livetest’,’livetrade’'
                acdate:
                  type: string
                  description: ' the accounting date to retrieve the details, value in “YYYY-MM-DD” format; omitted or empty will return the full history'
              required:
                - api_key
                - user
                - runtime_id
                - runmode
                - acdate
      description: This endpoint is used to query the whole transaction history of a particular trading strategy.
    parameters: []
  /strategy_model_resid:
    get:
      summary: History of Model Residuals
      tags:
        - Strategy Details
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    description: length of returned result
                    type: number
                  res:
                    type: array
                    description: a list of residual terms derived from model calibration
                    items:
                      type: number
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 100
                    res:
                      - -25.499236556872347
                      - -26.891846639883624
                      - -25.253238152547965
                      - -28.97369699740284
                      - -29.39838837856678
                      - -24.89291498421153
                      - 7.807305419311888
                      - -7.329559231185158
                      - -1.0073937576744356
                      - -4.232898075617413
                      - -4.539252751078493
                      - -3.045913906647911
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-query_strategy_model_resid
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runtime_id:
                  type: string
                  description: 'the backtest strategy runtime ID, or livetest/livetrade account ID'
                runmode:
                  type: string
                  description: 'strategy run mode, value either in ‘backtest’,’livetest’,’livetrade’'
                acdate:
                  type: string
                  description: 'the accounting date to retrieve the details, value in “YYYY-MM-DD” format'
              required:
                - api_key
                - user
                - runtime_id
                - runmode
                - acdate
        description: ''
      description: 'This endpoint is used to get the calibration residuals of the underlying user-defined trading model . '
    parameters: []
  /strategy_trade_resid:
    get:
      summary: History of Daily Trading Residuals
      tags:
        - Strategy Details
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: length of returned result
                  res:
                    type: object
                    description: a list of JSON object sorted in ascending time
                    required:
                      - Acdate
                      - residual
                    properties:
                      Acdate:
                        type: string
                        description: accounting date
                      residual:
                        type: number
                        description: the implicated trading residual
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 294
                    res:
                      - Acdate: '2019-01-14 00:00:00'
                        residual: -3.5905792683270192
                      - Acdate: '2019-01-15 00:00:00'
                        residual: -3.7961405528094474
                      - Acdate: '2019-01-16 00:00:00'
                        residual: -3.7961405528094474
                      - Acdate: '2019-12-24 00:00:00'
                        residual: 2.1262600456630025
                      - Acdate: '2019-12-25 00:00:00'
                        residual: 2.1262600456630025
                      - Acdate: '2019-12-26 00:00:00'
                        residual: 2.1262600456630025
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-query_strategy_trade_resid
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runtime_id:
                  type: string
                  description: 'the backtest strategy runtime ID, or livetest/livetrade account ID'
                runmode:
                  type: string
                  description: 'strategy run mode, value either in ‘backtest’,’livetest’,’livetrade’'
              required:
                - api_key
                - user
                - runtime_id
                - runmode
      description: 'This endpoint is used to get the daily history of the user-defined trading entrance differential. '
    parameters: []
  /strategy_market_perf:
    get:
      summary: Market Index Performance
      tags:
        - Strategy Details
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    description: a JSON object of market performance statistics
                    type: object
                    properties:
                      Acdate:
                        type: string
                      AnnualSharpe:
                        type: number
                      AnnualSortino:
                        type: number
                      AvgConsLoss:
                        type: number
                      AvgConsWin:
                        type: number
                      AvgDrawdownDuration:
                        type: number
                      AvgPerDayPL:
                        type: number
                      AvgPerTradePL:
                        type: number
                      DailySharpe:
                        type: number
                      DailySortino:
                        type: number
                      DownsideDailyStdDev:
                        type: number
                      MeanAnnualReturn:
                        type: number
                      MeanDailyReturn:
                        type: number
                      MedianDailyReturn:
                        type: number
                      OddRatio:
                        type: number
                      PlainAnnStdDev:
                        type: number
                      PlainDailyStdDev:
                        type: number
                      Q1DailyReturn:
                        type: number
                      Q3DailyReturn:
                        type: number
                      Score_Total:
                        type: number
                      TotalPnL:
                        type: number
                      TradableDay:
                        type: number
                      TradeCnt:
                        type: integer
                      WinRate:
                        type: number
                      c95_1DVaR:
                        type: number
                      c99_1DVaR:
                        type: number
                      maxConsLossAmt:
                        type: number
                      maxConsLossDay:
                        type: number
                      maxConsWinDay:
                        type: number
                      maxConsWinAmt:
                        type: number
                      maxDrawdownDuration:
                        type: number
                      maxDrawdown_amt:
                        type: number
                      maxDrawdown_pct:
                        type: number
                      numLossDay:
                        type: integer
                      numWinDay:
                        type: integer
                      score_AnnualSharpe:
                        type: number
                      score_AvgDrawdownDuration:
                        type: number
                      score_Rsquare:
                        type: number
                      score_TradePerDay:
                        type: number
                      score_WinRate:
                        type: number
                      score_maxDrawdown_pct:
                        type: number
                      simpleReturn:
                        type: number
                required:
                  - res
              examples:
                Example:
                  value:
                    res:
                      Acdate: '2019-12-01 00:00:00'
                      AnnualSharpe: -0.5352463891757715
                      AnnualSortino: -0.5569541612704427
                      AvgConsLoss: 0.7747747747747747
                      AvgConsWin: 1.09009009009009
                      AvgDrawdownDuration: 28.350299401197606
                      AvgPerDayPL: -7.713937125748503
                      AvgPerTradePL: -2576.455
                      DailySharpe: -0.0337173532358187
                      DailySortino: -0.035084814342479835
                      DownsideDailyStdDev: 0.02788609224492236
                      MeanAnnualReturn: -0.2465513490258927
                      MeanDailyReturn: -0.0009783783691503678
                      MedianDailyReturn: 0.0006486208438867269
                      OddRatio: 1.1907894736842104
                      PlainAnnStdDev: 0.4587999507924032
                      PlainDailyStdDev: 0.029017057249648367
                      Q1DailyReturn: -0.0033652790986905545
                      Q3DailyReturn: 0.005136543364990143
                      Score_Total: 43.50237663928803
                      TotalPnL: -2576.455
                      TradableDay: 334
                      TradeCnt: 1
                      WinRate: 0.5435435435435435
                      c95_1DVaR: -0.014326307407720984
                      c99_1DVaR: -0.032834748856140294
                      maxConsLossAmt: -3040.4479999999994
                      maxConsLossDay: 5
                      maxConsWinAmt: 176.40049999999974
                      maxConsWinDay: 7
                      maxDrawdownDuration: 98
                      maxDrawdown_amt: 3041.2479999999996
                      maxDrawdown_pct: 0.5003494427999646
                      numLossDay: 152
                      numWinDay: 181
                      score_AnnualSharpe: 36.929408452869374
                      score_AvgDrawdownDuration: 51.41361793832419
                      score_Rsquare: 10.997155865083608
                      score_TradePerDay: 55.74245257283172
                      score_WinRate: 55.966569286615766
                      score_maxDrawdown_pct: 49.965055720003534
                      simpleReturn: 0.0018440212380377297
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: |-
                      Method not allowed! 
                      Bad input parameters!
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-market_perf
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: your API key
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                symbol:
                  type: string
                  description: the market index name or underlying symbol name defined in /list_all_instrument
                startDate:
                  type: string
                  description: 'the starting date for performance evaluation, value in “YYYY-MM-DD” format'
                endDate:
                  type: string
                  description: ' the end date for performance evaluation, value in “YYYY-MM-DD” format'
              required:
                - api_key
                - user
                - symbol
                - startDate
                - endDate
            examples:
              example-1:
                value:
                  api_key: '1234567890'
                  user: user001
                  symbol: AUXAUD
                  startDate: '2019-01-01'
                  endDate: '2019-12-31'
      description: This endpoint is used to evaluate a simple buy-and-hold strategy for an underlying financial instrument.
    parameters: []
  /list_econs_series:
    get:
      summary: Available Economic Series
      tags:
        - Contract Specification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    description: total number of available economic series
                    type: integer
                  res:
                    type: array
                    description: the list of available series id
                    items:
                      type: string
              examples:
                Example:
                  value:
                    count: 73056
                    res:
                      - 2020RATIO020171
                      - 2020RATIO020171
                      - 2020RATIO037041
                      - 2020RATIO037043
                      - 2020RATIO037045
                      - 2020RATIO037047
                      - 2020RATIO037049
                      - YOUN639NRMNN
                      - YOUN639SRVON
                      - YOUN639TRAD
                      - YOUN639TRADN
                      - YOUN639UR
                      - YOUN639URN
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
        '':
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
      operationId: get-list_econs_series
      description: 'This endpoint is used to query all economic series id available at ALGOGENE. Due to large data volume, the example below only presents a subset of series id. '
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  description: your API key
                  type: string
              required:
                - user
                - api_key
  /meta_econs_series:
    get:
      summary: Metadata of Economic Series
      tags:
        - Contract Specification
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: object
                    properties:
                      series_id:
                        type: string
                        description: the economic series id
                      title:
                        type: string
                        description: the series description
                      freq:
                        type: string
                        description: 'the frequency of such economic release '
                      units:
                        type: string
                        description: the unit of the statistics value
                      seasonal:
                        type: string
                        description: identifier for any seasonal adjustment
                      src:
                        type: string
                        description: original source
                      geo:
                        type: string
                        description: the applicable city/country of the economic statistics
                      tag:
                        type: array
                        description: category of the series
                        items:
                          type: string
                      obs_start:
                        type: string
                        description: the earliest date of observation
              examples:
                Example:
                  value:
                    res:
                      freq: annual
                      geo: 'uinta county, wy'
                      obs_start: '2001-01-01'
                      seasonal: NSA
                      series_id: REALGDPSERV56041
                      src: bea
                      tag: '[''gdp'', ''industry'', ''private'', ''real'', ''services-providing'']'
                      title: 'Real Gross Domestic Product: Private Services-Providing Industries in Uinta County, WY'
                      units: Thousands of Chained 2012 U.S. Dollars
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-meta_econs_series
      description: 'This endpoint is used to get the description or metadata of a particular economic series. '
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                series_id:
                  type: string
                  description: one of the available economic series from /list_econs_series
              required:
                - user
                - api_key
                - series_id
          application/xml:
            schema:
              type: object
              properties: {}
  /realtime_price:
    get:
      summary: Market Quote
      tags:
        - Realtime Data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  res:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          description: time zone in UTC+0
                        bidPrice:
                          type: number
                          description: bid price
                        askPrice:
                          type: number
                          description: ask price
                        bidSize:
                          type: number
                          description: bid volume size
                        askSize:
                          type: number
                          description: ask volume size
                        bidOrderBook:
                          type: array
                          description: bid order book
                          items:
                            type: number
                        askOrderBook:
                          type: array
                          description: ask order book
                          items:
                            type: number
                      required:
                        - timestamp
                        - bidPrice
                        - askPrice
                        - bidSize
                        - askSize
                        - bidOrderBook
                        - askOrderBook
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 2
                    res:
                      HKXHKD:
                        askOrderBook: []
                        askPrice: 24845.9
                        askSize: 50
                        bidOrderBook: []
                        bidPrice: 24840.2
                        bidSize: 50
                        timestamp: '2020-06-01 23:11:02.381444'
                      SPXUSD:
                        askOrderBook: []
                        askPrice: 3135.6
                        askSize: 1000000
                        bidOrderBook: []
                        bidPrice: 3122.8
                        bidSize: 1000000
                        timestamp: '2020-05-01 23:11:02.381269'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-realtime_price
      description: This endpoint is used to get the latest financial market quote.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                symbols:
                  type: string
                  description: 'a list of financial symbols separated by '','''
              required:
                - user
                - api_key
                - symbols
            examples:
              Example:
                value:
                  symbols: 'HKXHKD,SPXUSD'
                  user: demo1
                  api_key: '1234567890'
  /realtime_news:
    get:
      summary: News
      tags:
        - Realtime Data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  authors:
                    type: array
                    description: the list of authors for the News
                    items:
                      type: string
                  category:
                    type: string
                    description: the category of the News
                  link:
                    type: string
                    description: the original url of the News
                  movies:
                    type: array
                    description: the list of embeded videos in the News
                    items:
                      type: string
                  published:
                    type: string
                    description: 'the published datetime, timezone in UTC+0'
                  source:
                    type: string
                    description: the source of the News
                  text:
                    type: string
                    description: the News content
                  title:
                    type: string
                    description: the News headline
                  top_image:
                    type: string
                    description: the top image embeded in the News
                required:
                  - authors
                  - category
                  - link
                  - movies
                  - published
                  - source
                  - text
                  - title
                  - top_image
              examples:
                Example:
                  value:
                    res:
                      authors: '[]'
                      category: FINANCE
                      link: 'https://news.rthk.hk/rthk/ch/component/k2/1533835-20200624.htm'
                      movies: '[]'
                      published: '2020-06-24 12:37:48.000000'
                      source: RTHK
                      text: |-
                        波司登料客戶羽絨庫存高或影響下財年批發業務增長

                        李臻昇報道

                        波司登首席財務官兼副總裁朱高峰說，雖然集團售賣羽絨在4-6月是淡季，但有因應市場推出春夏服飾，而集團在「618購物節」中的銷售增長達1倍以上，都帶動到期內銷售增長。



                        朱高峰提到，疫情令客戶的羽絨庫存上升，要到明年才可以消化，但目前未有計劃加大促銷力度，預期集團在下一個財政年度的批發業務會因為庫存高而影響增長。



                        提到有學者指疫情可能在下半年再爆發，朱高峰認為，難以預測會否因為有關因素影響秋冬旺季銷售。但他承認，疫情可能影響部分銷售場，集團已經有預案推進數碼化轉型，對全年銷售增長有信心。他又指，目前環境下，集團開新店會傾向審慎。
                      title: 波司登料客戶羽絨庫存高或影響下財年批發業務增長
                      top_image: 'https://newsstatic.rthk.hk/images/mfile_1533835_1_L_20200624123748.jpg'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-realtime_news
      description: This endpoint is used to get the latest News data feed.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                lang:
                  type: string
                  description: |-
                    language of News to retrieve, language codes follows [ISO 639-1 codes], available values
                    include
                    ‘af','ar','bg','bn','ca','cs','cy','da','de','el','en','es','et','fa','fi','fr','gu','he','hi','hr','hu','id','it','ja','kn','ko
                    ','lt','lv','mk','ml','mr','ne','nl','no','pa','pl','pt','ro','ru','sk','sl','so','sq','sv','sw','ta','te','th','tl','tr','uk','
                    ur','vi','zh-cn','zh-tw'
                category:
                  type: string
                  description: |-
                    Avaiable values include 'AFRICA', 'AGRICULTURE', 'AMERICAS', 'ART', 'ASIA', 'ASSET_SALES', 'AUSTRALIA', 'AUTO', 'BIOTECH', 'BOND', 'BOOK', 'BOTsWANA', 'BUSINESS', 'BUYBACK', 'CANADA', 'CENTRAL_ASIA', 'CHINA', 'COMMENTARY', 'COMMODITY', 'COMMUNITY', 'COMPANY', 'COMPANY NEWS', 'CONTRACT', 'CULTURE', 'DIPLOMACY', 'DIVIDENDS', 'EARNINGS', 'EAST_ASIA', 'ECONOMY', 'EDUCATION', 'EMERGING_MARKET', 'ENERGY', 'ENTERTAINMENT', 'ENVIRONMENT', 'ETF', 'ETHIOPIA', 'EUROPE', 'EVENT', 'FASHION', 'FDA', 'FEDERAL_RESERVE', 'FINANCE', 'FINANCING', 'FINTECH', 'FOREX', 'FORUM', 'FRANCE', 'FUND', 'FUTURE', 'GENERAL', 'GEOPOLITICS', 'GERMANY', 'GHANA', 'HEALTH', 'HEIDI', 'HISTORY', 'HONG KONG', 'HOT', 'HOUSE', 'INDIA', 'INDONESIA', 'INSIDER_TRADE', 'INTERNET', 'INTERVIEW', 'IPO', 'IRELAND', 'ISRAEL', 'ITALIA', 'JAPAN', 'KENYA', 'KOREA', 'LATIN_AMERICA', 'LATVIA', 'LAW', 'LEGAL', 'LIFESTYLE', 'LOGISTICS', 'M&A', 'MALAYSIA', 'MANAGEMENT', 'MEDIA', 'MIDDLE_EAST', 'MILITARY', 'MONEY', 'MOVIES', 'NAMIBIA', 'NATION', 'NEW_ZEALAND', 'NIGERIA', 'NORTH_KOREA', 'OFFERING', 'OPINION', 'OPTION', 'PAKISTAN', 'PEOPLE', 'PETS', 'PHILIPPINES', 'PICTURES', 'POLITICS', 'POLLS', 'POSTAL', 'PRESS', 'RATING', 'REAL_ESTATE', 'REAL_TIME', 'REGION', 'RESEARCH', 'RETAIL_SALES', 'REVIEW', 'RUMORS', 'RUSSIA', 'SCIENCE', 'SINGAPORE', 'SMALL_CAP', 'SOCIALS', 'SOUTHEAST_ASIA', 'SOUTH_AFRICA', 'SOUTH_ASIA', 'SPEECH', 'SPORT', 'SPORT_BOXING', 'SPORT_GOLF', 'SPORT_RACING', 'SPORT_RUGBY', 'SPORT_SOCCER', 'SPORT_TENNIS', 'STATISITCS', 'STOCK', 'STOCK_SPLIT', 'STORY', 'TAIWAN', 'TANZANIA', 'TECHNOLOGY', 'TELECOMS', 'TOP', 'TOURISM', 'TRAFFIC', 'TRAVEL', 'TURKEY', 'UGANDA', 'UK', 'US', 'USA', 'WEATHER', 'WORLD', 'ZIMBABWE'; 
                    Multiple category separated by ","
                source:
                  type: string
                  description: |-
                    Available values include 'APPLE_DAILY', 'AsahiNews', 'BBC', 'CHOSUM', 'CNN', 'DW_NEWS', 'FACEBOOK', 'GOOGLE', 'GOV.HK', 'HKFP', 'InsiderInsight', 'JTBC', 'JapanIndustryNews', 'KBS', 'KyodoNews', 'LivedoorNews', 'MARKETWATCH', 'NDTV', 'NHK', 'NipponNews', 'ORIENTAL_DAILY', 'PeopleDaily', 'REUTERS', 'RTHK', 'SoraNews', 'TRT', 'UDN', 'WallStreetJournal', 'YAHOO', 'Yonhap', 'aamacau', 'bastillepost', 'benzinga', 'feedburner', 'feedx', 'heraldcorp', 'hkcnews', 'hkjam', 'inmediahk', 'japaninsides', 'japantimes', 'japantoday', 'koreaherald', 'koreatimes', 'litenews', 'localpresshk', 'mcnews', 'memehk', 'newsonjapan', 'nytimes', 'pentoy', 'philstar', 'polymerhk', 'post852', 'scmp', 'thebridge', 'theinitium', 'thejapannews', 'thestandnews', 'tmhk', 'tokyoreporter', 'voachinese', 'yahoo', 'zakzak', 'zhihu'
                    Mutiple source separated by ","
              required:
                - user
                - api_key
                - lang
          application/xml:
            schema:
              type: object
              properties: {}
  /realtime_econs_stat:
    get:
      summary: Economic Statistics
      tags:
        - Realtime Data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  series_id:
                    type: string
                    description: the series id of the economic statistics
                  title:
                    type: string
                    description: the description of the economic statistics
                  src:
                    type: string
                    description: the original source of the economic statistics
                  geo:
                    type: string
                    description: the applicable city/country of the economic statistics
                  tag:
                    type: string
                    description: category of the economic statistics
                  freq:
                    type: string
                    description: release frequency of the economic statistics
                  units:
                    type: string
                    description: units of the observation value
                  seasonal_adj:
                    type: string
                    description: identifier for seasonal adjustment of the economic statistics
                  notes:
                    type: string
                    description: remarks
                  popularity:
                    description: popularity of the economic statistics
                    type: number
                  obs_date:
                    type: string
                    description: observation date of the economic statistics
                  obs_val:
                    type: number
                    description: observation value of the economic statistics
                required:
                  - series_id
                  - title
                  - src
                  - freq
                  - units
                  - obs_date
                  - obs_val
              examples:
                Example:
                  value:
                    series_id: HDTGPDUSQ163N
                    title: Household Debt to GDP for United States
                    freq: quarterly
                    units: Ratio
                    units_short: Ratio
                    seasonal_adj: NSA
                    popularity: 75
                    group_popularity: ''
                    obs_start: '2005-01-01'
                    obs_end: '2019-10-01'
                    notes: |-
                      The data for household debt comprise debt incurred by resident households of the economy only. This FSI measures the overall level of household indebtedness (commonly related to consumer loans and mortgages) as a share of GDP.

                      Copyright © 2016, International Monetary Fund. Reprinted with permission. Complete terms of use and contact details are available from the IMF (http://www.imf.org/external/terms.htm).
                    timestamp: '2020-06-01 08:01:01.050000'
                    src: imf
                    geo: usa
                    tag:
                      - gdp
                      - households
                      - debt
                    date: '2019-10-01'
                    value: 76.2937755292674
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-realtime_econs_stat
      description: This endpoint is used to get the latest economic statistics data.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
              required:
                - user
                - api_key
  /realtime_weather:
    get:
      summary: Weather
      tags:
        - Realtime Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    description: |-
                      the latest recorded timestamp of the weather event, 
                      timezone is standardised into UTC+0
                  city:
                    type: string
                    description: city name
                  country:
                    type: string
                    description: the country of the city
                  coord_lat:
                    type: number
                    description: 'latitude of the city''s geographic coordinate   '
                  coord_lon:
                    type: number
                    description: 'longitude of the city''s geographic coordinate   '
                  surnise:
                    type: string
                    description: sunrise time
                  sunset:
                    type: string
                    description: estimated sunset time
                  visibility:
                    type: number
                    description: 'the visibility, unit in miles, None for missing value'
                  pressure:
                    type: number
                    description: 'the atmosheric pressure of the city at the recorded time, unit in Dynes per squre centimetre'
                  temperature_min:
                    type: number
                    description: 'the minimum temperature of the city on the recorded date, unit in Fahrenheit (F)'
                  temperature_max:
                    type: number
                    description: 'the maximum temperature of the city on the recorded date, unit in Fahrenheit (F)'
                  temperature:
                    type: number
                    description: 'the temperature of the city at the recorded time, unit in Fahrenheit (F)'
                  humidity:
                    type: number
                    description: 'the humidity of the city at the recorded time, unit in percentage (%)'
                  wind_speed:
                    type: number
                    description: 'the wind speed of the city at the recorded time, unit in mile per hour (mph)'
                  wind_degree:
                    type: number
                    description: 'the wind degree of the city at the recorded time, value range from 0 to 360 degree'
                  weather:
                    type: string
                    description: 'high level classification of the city''s weather, value include ''Clear'', ''Clouds'', ''Haze'', ''Mist'', ''Rain'', etc'
                  weather_desc:
                    type: string
                    description: 'detailed description of the city''s weather, value include ''broken clouds'', ''clear sky'', ''few clouds'', ''haze'', ''light rain'', ''mist'', ''moderate rain'', ''overcast clouds'', ''scattered clouds'', etc'
                  clouds:
                    type: number
                    description: 'the density of cloud of the city, value ranging from 0 to 100'
              examples:
                Example:
                  value:
                    res:
                      city: New York
                      clouds: 75
                      coord_lat: 40.71
                      coord_lon: -74.01
                      country: US
                      humidity: 65
                      pressure: 1006
                      sunrise: '2020-06-24 09:25:55.000000'
                      sunset: '2020-06-25 00:31:07.000000'
                      temperature: 300.31
                      temperature_max: 301.15
                      temperature_min: 299.15
                      timestamp: '2020-06-24 15:13:03.000000'
                      visibility: 16093
                      weather: Clouds
                      weather_desc: broken clouds
                      wind_degree: 250
                      wind_speed: 3.6
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-realtime_weather
      description: This endpoint is used to get the current weather information of any given city in the world.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: you API key
                city:
                  type: string
                  description: 'any city name in the world, including but not limited to ''Baghdad'', ''Bangkok'', ''Beijing'', ''Berlin'', ''Bloemfontein'', ''Boston'', ''Brasilia'', ''Cairo'', ''Cape Town'', ''Chengdu'', ''Chicago'', ''Chongqing'', ''Columbia'', ''Hanoi'', ''Havana'', ''Hong Kong'', ''Jakarta'', ''Kinshasa'', ''London'', ''Los Angeles'', ''Madrid'', ''Malaysia'', ''Manila'', ''Moscow'', ''New Delhi'', ''New York City'', ''Osaka'', ''Ottawa'', ''Paris'', ''Perth'', ''Phnom Penh'', ''Pretoria'', ''Pyongyang'', ''Rabat'', ''Reykjavik'', ''Rome'', ''San Diego'', ''Seoul'', ''Shanghai'', ''Singapore'', ''Sudan'', ''Taipei'', ''Tokyo'', ''Toronto'', ''Ulaanbaatar'', ''Washington'', ''Xinjiang'', etc'
              required:
                - user
                - api_key
                - city
  /realtime_exchange_rate:
    get:
      summary: Currency Exchange Rate
      tags:
        - Realtime Data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: number
              examples:
                Example:
                  value:
                    res: 13.7828
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-realtime_exchange_rate
      description: This endpoint is used to get the real-time exchange rate between 2 currencies.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                cur1:
                  type: string
                  description: 'exchange from '
                cur2:
                  type: string
                  description: exchange to
              required:
                - user
                - api_key
                - cur1
                - cur2
            examples:
              Example:
                value:
                  user: demo
                  api_key: '1234567890'
                  cur1: HKD
                  cur2: JPY
        description: It returns the amount of 'cur2' in exchange for 1 unit of 'cur1'.
  /realtime_econs_calendar:
    get:
      summary: Economic Calendar
      tags:
        - Realtime Data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    description: timestamp of the calendar event
                  eventid:
                    type: string
                    description: event id
                  currency:
                    type: string
                    description: the impacted currency/country of the calendar event
                  impact:
                    type: string
                    description: the economic impact
                  nevent:
                    type: string
                    description: description of the calendar event
                  actual:
                    type: string
                    description: the actual figure
                  forecast:
                    type: string
                    description: the forecast figure
                  previous:
                    type: string
                    description: the previous figure
                  unit:
                    type: string
                    description: the unit of the figure
                required:
                  - timestamp
                  - eventid
                  - currency
                  - impact
                  - nevent
                  - actual
                  - forecast
                  - previous
                  - unit
              examples:
                Example:
                  value:
                    res:
                      actual: ''
                      currency: USD
                      eventid: '111174'
                      forecast: ''
                      impact: Low Impact Expected
                      nevent: Revised UoM Inflation Expectations
                      previous: 3
                      timestamp: '2020-06-26 15:00:00'
                      unit: '%'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-realtime_econs_calendar
      description: 'This endpoint is used to get latest economic calendar data, such as the coming holiday/statistics release time/president speech/etc. '
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
              required:
                - user
                - api_key
        description: ''
  /history_weather:
    get:
      summary: Weather
      tags:
        - Historical Data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  res:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          description: |-
                            the recorded timestamp of the weather event, 
                            timezone is standardised into UTC+0
                        city:
                          type: string
                          description: the city/region of the weather event
                        country:
                          type: string
                          description: the country/region code of the weather event
                        coord_lat:
                          type: number
                          description: the geographical coordinate in latitude for the recorded location
                        coord_lon:
                          type: number
                          description: the geographical coordinate in longitude for the recorded location
                        sunrise:
                          type: string
                          description: the sunrise time of the recorded date
                        sunset:
                          type: string
                          description: the forecast sunset time of the recorded date
                        visibility:
                          type: number
                          description: 'the visibility, unit in miles, None for missing value'
                        pressure:
                          type: number
                          description: 'the atmosheric pressure of the city at the recorded time, unit in Dynes per squre centimetre'
                        temperature_min:
                          description: 'minimum temperature during the day, unit in Fahrenheit'
                          type: number
                        temperature_max:
                          description: 'maximum temperature during the day, unit in Fahrenheit'
                          type: number
                        temperature:
                          description: 'the temperature at the captured time, unit in Fahrenheit'
                          type: number
                        humidity:
                          type: number
                          description: |-
                            the humidity of the city at the recorded time, 
                            unit in percentage (%)
                        wind_speed:
                          type: number
                          description: 'the wind speed of the city at the recorded time, unit in mile per hour (mph)'
                        wind_degree:
                          type: number
                          description: 'the wind degree of the city at the recorded time, value range from 0 to 360 degree'
                        weather:
                          type: string
                          description: 'high level classification of the city''s weather, value include ''Clear'', ''Clouds'', ''Haze'', ''Mist'', ''Rain'', etc'
                        weather_desc:
                          type: string
                          description: 'detailed description of the city''s weather, value include ''broken clouds'', ''clear sky'', ''few clouds'', ''haze'', ''light rain'', ''mist'', ''moderate rain'', ''overcast clouds'', ''scattered clouds'', etc'
                        clouds:
                          type: number
                          description: 'the density of cloud of the city, value ranging from 0 to 100'
              examples:
                Example:
                  value:
                    count: 4
                    res:
                      - city: Hong Kong
                        clouds: 100
                        coord_lat: 22.29
                        coord_lon: 114.16
                        country: HK
                        humidity: 74
                        pressure: 1007
                        sunrise: ''
                        sunset: '2020-06-24 11:10:36.000000'
                        temperature: 302.71
                        temperature_max: 303.15
                        temperature_min: 302.04
                        timestamp: '2020-06-24 00:02:46.000000'
                        visibility: None
                        weather: Clouds
                        weather_desc: overcast clouds
                        wind_degree: 220
                        wind_speed: 4.02
                      - city: Hong Kong
                        clouds: 100
                        coord_lat: 22.29
                        coord_lon: 114.16
                        country: HK
                        humidity: 74
                        pressure: 1008
                        sunrise: ''
                        sunset: '2020-06-24 11:10:36.000000'
                        temperature: 302.84
                        temperature_max: 303.71
                        temperature_min: 302.04
                        timestamp: '2020-06-24 00:15:01.000000'
                        visibility: None
                        weather: Clouds
                        weather_desc: overcast clouds
                        wind_degree: 220
                        wind_speed: 4.02
                      - city: Hong Kong
                        clouds: 100
                        coord_lat: 22.29
                        coord_lon: 114.16
                        country: HK
                        humidity: 74
                        pressure: 1008
                        sunrise: ''
                        sunset: '2020-06-24 11:10:36.000000'
                        temperature: 302.84
                        temperature_max: 303.71
                        temperature_min: 302.04
                        timestamp: '2020-06-24 00:25:08.000000'
                        visibility: None
                        weather: Clouds
                        weather_desc: overcast clouds
                        wind_degree: 220
                        wind_speed: 4.02
                      - city: Hong Kong
                        clouds: 100
                        coord_lat: 22.29
                        coord_lon: 114.16
                        country: HK
                        humidity: 74
                        pressure: 1008
                        sunrise: ''
                        sunset: '2020-06-24 11:10:36.000000'
                        temperature: 303
                        temperature_max: 303.71
                        temperature_min: 302.04
                        timestamp: '2020-06-24 00:35:08.000000'
                        visibility: None
                        weather: Clouds
                        weather_desc: overcast clouds
                        wind_degree: 220
                        wind_speed: 4.47
                      - city: Hong Kong
                        clouds: 100
                        coord_lat: 22.29
                        coord_lon: 114.16
                        country: HK
                        humidity: 74
                        pressure: 1008
                        sunrise: ''
                        sunset: '2020-06-24 11:10:36.000000'
                        temperature: 303
                        temperature_max: 303.71
                        temperature_min: 302.04
                        timestamp: '2020-06-24 00:45:42.000000'
                        visibility: None
                        weather: Clouds
                        weather_desc: overcast clouds
                        wind_degree: 220
                        wind_speed: 4.47
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-history_weather
      description: This endpoint is used to get the historical weather information of a given city.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                city:
                  type: string
                  description: 'any city name in the world, including but not limited to ''Baghdad'', ''Bangkok'', ''Beijing'', ''Berlin'', ''Bloemfontein'', ''Boston'', ''Brasilia'', ''Cairo'', ''Cape Town'', ''Chengdu'', ''Chicago'', ''Chongqing'', ''Columbia'', ''Hanoi'', ''Havana'', ''Hong Kong'', ''Jakarta'', ''Kinshasa'', ''London'', ''Los Angeles'', ''Madrid'', ''Malaysia'', ''Manila'', ''Moscow'', ''New Delhi'', ''New York City'', ''Osaka'', ''Ottawa'', ''Paris'', ''Perth'', ''Phnom Penh'', ''Pretoria'', ''Pyongyang'', ''Rabat'', ''Reykjavik'', ''Rome'', ''San Diego'', ''Seoul'', ''Shanghai'', ''Singapore'', ''Sudan'', ''Taipei'', ''Tokyo'', ''Toronto'', ''Ulaanbaatar'', ''Washington'', ''Xinjiang'', etc'
                starttime:
                  type: string
                  description: 'retrieve data with timestamp greater than this specified value, format in “yyyy-mm-dd hh:mm:ss”'
                endtime:
                  type: string
                  description: 'retrieve data with timestamp less than this specified value, format in “yyyy-mm-dd hh:mm:ss”'
              required:
                - user
                - api_key
                - city
                - starttime
                - endtime
  /history_econs_calendar:
    get:
      summary: Economic Calendar
      tags:
        - Historical Data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: number of records returned
                  res:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          description: 'captured timestamp of the calendar event, time zone in UTC+0'
                        eventid:
                          type: string
                          description: event id of the calendar event
                        currency:
                          type: string
                          description: the impacted curreny/country of the calendar event
                        impact:
                          type: string
                          description: the estimated impact of the calendar event
                        nevent:
                          type: string
                          description: the description of the calendar event
                        actual:
                          type: string
                          description: actual figure of the calendar event
                        forecast:
                          type: string
                          description: forecast figure of the calendar event
                        previous:
                          type: string
                          description: previous figure of the calendar event
                        unit:
                          type: string
                          description: the unit of the reported figures
                      required:
                        - timestamp
                        - eventid
                        - currency
                        - impact
                        - nevent
                        - actual
                        - forecast
                        - previous
                        - unit
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 9
                    res:
                      - actual: 45.7
                        currency: EUR
                        eventid: '111409'
                        forecast: 44
                        impact: Low Impact Expected
                        nevent: Spanish Manufacturing PMI
                        previous: 50.4
                        timestamp: '2020-04-01 08:15:00'
                        unit: ''
                      - actual: 43.7
                        currency: CHF
                        eventid: '111951'
                        forecast: 42.3
                        impact: Low Impact Expected
                        nevent: Manufacturing PMI
                        previous: 49.5
                        timestamp: '2020-04-01 08:30:00'
                        unit: ''
                      - actual: 40.3
                        currency: EUR
                        eventid: '111408'
                        forecast: 41.1
                        impact: Low Impact Expected
                        nevent: Italian Manufacturing PMI
                        previous: 48.7
                        timestamp: '2020-04-01 08:45:00'
                        unit: ''
                      - actual: ''
                        currency: EUR
                        eventid: '111406'
                        forecast: 42.9
                        impact: Low Impact Expected
                        nevent: French Final Manufacturing PMI
                        previous: 42.9
                        timestamp: '2020-04-01 08:50:00'
                        unit: ''
                      - actual: ''
                        currency: EUR
                        eventid: '111407'
                        forecast: 45.6
                        impact: Low Impact Expected
                        nevent: German Final Manufacturing PMI
                        previous: 45.7
                        timestamp: '2020-04-01 08:55:00'
                        unit: ''
                      - actual: ''
                        currency: EUR
                        eventid: '111404'
                        forecast: 44.7
                        impact: Low Impact Expected
                        nevent: Final Manufacturing PMI
                        previous: 44.8
                        timestamp: '2020-04-01 09:00:00'
                        unit: ''
                      - actual: 9.7
                        currency: EUR
                        eventid: '111732'
                        forecast: 10
                        impact: Low Impact Expected
                        nevent: Italian Monthly Unemployment Rate
                        previous: 9.8
                        timestamp: '2020-04-01 09:00:00'
                        unit: '%'
                      - actual: 47.8
                        currency: GBP
                        eventid: '111405'
                        forecast: 47.1
                        impact: Low Impact Expected
                        nevent: Final Manufacturing PMI
                        previous: 48
                        timestamp: '2020-04-01 09:30:00'
                        unit: ''
                      - actual: 7.3
                        currency: EUR
                        eventid: '112598'
                        forecast: 7.4
                        impact: Low Impact Expected
                        nevent: Unemployment Rate
                        previous: 7.4
                        timestamp: '2020-04-01 10:00:00'
                        unit: '%'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-history_econs_calendar
      description: 'This endpoint is used to get historical economic calendar data, such as the coming holiday/statistics release time/president speech/etc. '
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                starttime:
                  type: string
                  description: 'the data to retrive after this timestamp '
                endtime:
                  type: string
                  description: 'the data to retrive before this timestamp '
              required:
                - user
                - api_key
                - starttime
                - endtime
  /history_econs_stat:
    get:
      summary: Economic Statistics
      tags:
        - Historical Data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: total number of observations returned
                  res:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          description: observation date of the economic series
                        value:
                          type: string
                          description: observation value of the economic series
                  series_id:
                    type: string
                    description: your specified economic series id
                required:
                  - count
                  - res
                  - series_id
              examples:
                Example:
                  value:
                    count: 5
                    res:
                      - date: '2020-01-01'
                        value: 44.5
                      - date: '2020-02-01'
                        value: 44.5
                      - date: '2020-03-01'
                        value: 44
                      - date: '2020-04-01'
                        value: 40.2
                      - date: '2020-05-01'
                        value: 39.8
                    series_id: YOUN639TRADN
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-history_econs_stat
      description: This endpoint is used to retrieve historical observation of a given economic series.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: you API key
                series_id:
                  type: string
                  description: an economic series id from /list_econs_series
                starttime:
                  type: string
                  description: 'the data to retrive after this timestamp, format in ''YYYY-MM-DD'''
                endtime:
                  type: string
                  description: 'the data to retrive before this timestamp, format in ''YYYY-MM-DD'''
              required:
                - user
                - api_key
                - series_id
                - starttime
                - endtime
            examples:
              Example:
                value:
                  user: demo
                  api_key: '1234567890'
                  series_id: YOUN639TRADN
                  starttime: '2020-01-01'
                  endtime: '2020-05-31'
  /session:
    get:
      summary: Session Token
      tags:
        - Account
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: object
                    properties:
                      token:
                        type: string
                        description: the token string
                      expired_utc:
                        type: string
                        description: 'the expiry datetime of the token, format in ''YYYY-MM-DD hh:mm:ss.ffffff'', time zone in UTC'
                    required:
                      - token
                      - expired_utc
              examples:
                Example:
                  value:
                    res:
                      expired_utc: '2020-08-30 16:00:59.038000'
                      token: '69630669'
        '400':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: error messages
                required:
                  - res
              examples:
                example-1:
                  value:
                    res: Unauthorized Access!
                example-2:
                  value:
                    res: Bad input parameters!
      operationId: get-session
      description: 'This endpoint is used to create/refresh the token for performing subsequent trade actions. For internet security, the token as a temparory passcode only has 1 hour validity. When the valid period expired, you are required to get a new token. '
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
              required:
                - user
                - api_key
  /accounts:
    get:
      summary: Trading Accounts
      tags:
        - Account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: total number of accounts
                  res:
                    type: array
                    items:
                      type: object
                      properties:
                        accountid:
                          type: string
                          description: Account ID
                        runmode:
                          type: string
                          description: 'account type, value either in ''livetest'',''livetrade'''
                        NAV:
                          type: number
                          description: Net Asset Value
                        availableBalance:
                          type: number
                          description: 'Remaining balance that is available for trading  '
                        marginUsed:
                          type: number
                          description: capital in use
                        realizedPL:
                          type: number
                          description: cummulative realized profit/loss
                        unrealizedPL:
                          type: number
                          description: outstanding unrealized profit/loss
                        lastUpdatedTime:
                          type: string
                          description: 'Last updated time, format in ''YYYY-MM-DD hh:mm:ss.ffffff'', time zone in UTC'
                        isTrading:
                          type: boolean
                          description: specify whether an algo is running on this account
                      required:
                        - accountid
                        - runmode
                        - NAV
                        - availableBalance
                        - marginUsed
                        - realizedPL
                        - unrealizedPL
                        - lastUpdatedTime
                        - isTrading
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 2
                    res:
                      - NAV: 49793.35
                        accountid: '1002'
                        availableBalance: 49451.93
                        deposit: '0'
                        isTrading: true
                        marginUsed: 341.42
                        realizedPL: -67.9
                        runmode: livetest
                        lastUpdatedTime: '2019-12-14 01:07:18.109000'
                        unrealizedPL: -138.75
                      - NAV: 77140.02
                        accountid: '1000'
                        availableBalance: 77140.02
                        deposit: '0'
                        isTrading: false
                        marginUsed: 0
                        realizedPL: 0
                        runmode: livetest
                        lastUpdatedTime: '2020-05-05 10:57:58.964000'
                        unrealizedPL: 0
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: error messages
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-accounts
      description: This endpoint is used to list all your available trading accounts with latest balance.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'strategy run mode, value either in ''livetest'',''livetrade'''
                token:
                  type: string
                  description: the token obtained via endpoint /session
              required:
                - user
                - api_key
                - runmode
                - token
  /positions:
    get:
      summary: Outstanding Positions
      tags:
        - Account
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: total number of symbol that has non-zero position
                  res:
                    type: object
                    properties:
                      symbol:
                        type: object
                        properties:
                          LastTradeTime:
                            type: string
                            description: 'last transaction time, format in ''YYYY-MM-DD hh:mm:ss.ffffff'', time zone in UTC'
                          MarketValue:
                            type: number
                            description: market value
                          Position:
                            type: number
                            description: net position in share
                          netVolume:
                            type: number
                            description: net volume in lot
                        required:
                          - LastTradeTime
                          - MarketValue
                          - Position
                          - netVolume
                required:
                  - count
              examples:
                Example:
                  value:
                    count: 1
                    res:
                      EURUSD:
                        LastTradeTime: '2020-09-06 12:05:26.123000'
                        MarketValue: 1065
                        Position: 1000
                        netVolume: 0.01
                      BTCUSD:
                        LastTradeTime: '2020-09-07 16:15:25.220000'
                        MarketValue: 11105.3
                        Position: 100
                        netVolume: 0.01
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Error messages
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-positions
      description: This endpoint is used to get the outstanding positions/inventory of a specifed account.
      parameters:
        - schema:
            type: string
          in: header
          description: application/json
          name: Content-Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'run mode or account type, value either in ''livetest'',''livetrade'''
                accountid:
                  type: string
                  description: ALGOGENE account ID
                token:
                  type: string
                  description: the token obtained via endpoint /session
              required:
                - user
                - api_key
                - runmode
                - accountid
                - token
  /balance:
    get:
      summary: Outstanding Account Balance
      tags:
        - Account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  NAV:
                    type: number
                    description: Net Asset Value
                  available_Balance:
                    type: number
                    description: Remaining balance that is available for trading
                  margin_Used:
                    type: number
                    description: capital in use
                  realized_PL:
                    type: number
                    description: cummulative realized profit/loss
                  timestamp:
                    type: string
                    description: 'Last updated time, format in ''YYYY-MM-DD hh:mm:ss.ffffff'', time zone in UTC'
                  unrealized_PL:
                    type: number
                    description: outstanding unrealized profit/loss
                  BaseCurrency:
                    type: string
                    description: Base currency of the account
                required:
                  - NAV
                  - available_Balance
                  - margin_Used
                  - realized_PL
                  - timestamp
                  - unrealized_PL
                  - BaseCurrency
              examples:
                Example:
                  value:
                    NAV: 993185
                    available_Balance: 993163.54
                    margin_Used: 21.46
                    realized_PL: -6821
                    timestamp: '2020-09-08 04:16:19.896000'
                    unrealized_PL: 6
                    BaseCurrency: HKD
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Error messages
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-balance
      description: This endpoint is used to get the latest account balance of a specifed account.
      parameters:
        - schema:
            type: string
          in: header
          description: application/json
          name: Content-Type
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                runmode:
                  type: string
                  description: 'run mode or account type, value either in ''livetest'',''livetrade'''
                accountid:
                  type: string
                  description: ALGOGENE account ID
                token:
                  type: string
                  description: the token obtained via endpoint /session
                api_key:
                  type: string
                  description: your API key
              required:
                - user
                - runmode
                - accountid
                - token
                - api_key
  /opened_trades:
    get:
      summary: Outstanding Trades
      tags:
        - Account
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: total number of outstanding trades
                  res:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          description: 'transaction time, format in ''YYYY-MM-DD hh:mm:ss.ffffff'', time zone in UTC'
                        broker:
                          type: string
                          description: the transacted broker/dealer
                        buysell:
                          description: 'buy/sell direction of the transaction, 1 for buy order, -1 for sell order'
                          type: integer
                        instrument:
                          type: string
                          description: the transacted instrument
                        symbol:
                          type: string
                          description: |-
                            The transacted symbol. 
                            For non FUT/OPT product, symbol = instrument.
                            For FUT product, symbol = instrument_expiry. 
                            For OPT product, symbol = instrument_expiry_right_strike
                        openclose:
                          type: string
                          description: 'value either in ''open'',''close'''
                        holdtime:
                          description: |-
                            The amount of time holding this trade, unit in seconds. 
                            If value = 0, it means holding time is not specified.
                          type: integer
                        volume:
                          type: number
                          description: transacted volume in number of lot
                        market:
                          type: string
                          description: the security market of the instrument
                        order_Ref:
                          type: string
                          description: user customized orer reference
                        price:
                          type: number
                          description: the transacted price
                        product_type:
                          type: string
                          description: the product type of the instrument
                        right:
                          type: string
                          description: |-
                            For non OPT product, it is ''. 
                            For OPT product, it is the option exercise right, 'C' for call, 'P' for put.
                        expiry:
                          type: string
                          description: |-
                            For non FUT/OPT product, it is ''.
                            For FUT/OPT product, it is the contract expiry date, format in 'YYYYMMDD'.
                        strike:
                          type: string
                          description: |-
                            For non OPT product, it is 0. 
                            For OPT product, it is the option strike price.
                        trade_ID:
                          type: string
                          description: ALGOGENE transaction ID
                        unrealizedPL:
                          type: string
                          description: outstanding unrealized profit/loss of this trade
                        takeProfitLevel:
                          type: string
                          description: |-
                            Your specified take profit level. 
                            Value = 0 if not specified.
                        stopLossLevel:
                          type: string
                          description: |-
                            Your specified stop loss level. 
                            Value = 0 if not specified.
                        channel:
                          type: string
                          description: 'The channel to execute this trade, values either in ''api'',''web'',''manual'''
                      required:
                        - timestamp
                        - broker
                        - buysell
                        - instrument
                        - symbol
                        - openclose
                        - holdtime
                        - volume
                        - market
                        - order_Ref
                        - price
                        - product_type
                        - right
                        - expiry
                        - strike
                        - trade_ID
                        - unrealizedPL
                        - takeProfitLevel
                        - stopLossLevel
                        - channel
                required:
                  - count
                  - res
              examples:
                Example:
                  value:
                    count: 1
                    res:
                      - broker: ALGOGENE
                        buysell: 1
                        channel: api
                        expiry: ''
                        holdtime: 0
                        instrument: EURUSD
                        market: FX
                        openclose: open
                        order_Ref: myref abcd1234
                        price: 1.078
                        product_type: SPOT
                        right: ''
                        stopLossLevel: 0
                        strike: 0
                        symbol: EURUSD
                        takeProfitLevel: 0
                        timestamp: '2020-09-06 12:05:26.123000'
                        trade_ID: '69'
                        volume: 0.01
                        unrealizedPL: -12.5
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Error messages
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-opened_trades
      description: This endpoint is used to get the outstanding open trades for a specified account.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'execution mode or account type, value either in ''livetest'',''livetrade'''
                accountid:
                  type: string
                  description: ALGOGENE account ID
                token:
                  type: string
                  description: the token obtained via endpoint /session
              required:
                - user
                - api_key
                - runmode
                - accountid
                - token
  /pending_trades:
    get:
      summary: Pending Trades
      tags:
        - Account
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: total number of limit orders in pending queue
                  res:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          description: 'creation timestamp of this limit order, format in ''YYYY-MM-DD hh:mm:ss.ffffff'', time zone in UTC'
                        broker:
                          type: string
                          description: the transacted broker/dealer
                        buysell:
                          type: integer
                          description: 'buysell direction, 1 for buy, -1 for sell'
                        channel:
                          type: string
                          description: 'the execution channel, value in ''api'',''web'',''manual''.'
                        instrument:
                          type: string
                          description: the instrument name
                        symbol:
                          type: string
                          description: |-
                            The transacted symbol. 
                            For non FUT/OPT product, symbol = instrument.
                            For FUT product, symbol = instrument_expiry. 
                            For OPT product, symbol = instrument_expiry_right_strike
                        expiry:
                          type: string
                          description: |-
                            For non FUT/OPT product, value is ''. 
                            For FUT/OPT product, it is the contract expiry date. 
                        right:
                          type: string
                          description: |-
                            For non OPT product, value is ''. 
                            For OPT product, it is the option exercise right, 'C' for call, 'P' for put.
                        strike:
                          type: number
                          description: |-
                            For non-OPT product, value is 0. 
                            For OPT product, it is the option strike price.
                        openclose:
                          type: string
                          description: open or close
                        market:
                          type: string
                          description: the seurity market
                        product_type:
                          type: string
                          description: the product type of this instrument
                        price:
                          type: number
                          description: your specified limit price to execute
                        volume:
                          type: number
                          description: your specified volume in number of lot
                        trade_ID:
                          type: string
                          description: ALGOGENE transaction ID
                        holdtime:
                          type: number
                          description: |-
                            Your specified holding time after this limit order has been filled, unit in seconds. 
                            Value = 0 if not specified. 
                        stopLossLevel:
                          type: number
                          description: |-
                            Your specified stop loss level after this limit order has been filled. 
                            Value = 0 if not specified. 
                        takeProfitLevel:
                          type: number
                          description: |-
                            Your specified take profit level after this limit order has been filled. 
                            Value = 0 if not specified. 
                        timeinforce:
                          type: number
                          description: |-
                            The amount of time before canceling the limorder, unit in seconds. 
                            Value = 0 if not specified. 
                        order_Ref:
                          type: string
                          description: your specified order reference
                      required:
                        - timestamp
                        - broker
                        - buysell
                        - channel
                        - instrument
                        - symbol
                        - expiry
                        - right
                        - strike
                        - openclose
                        - market
                        - product_type
                        - price
                        - volume
                        - trade_ID
                        - holdtime
                        - stopLossLevel
                        - takeProfitLevel
                        - timeinforce
                        - order_Ref
                required:
                  - count
              examples:
                Example:
                  value:
                    count: 1
                    res:
                      - broker: ALGOGENE
                        buysell: 1
                        channel: api
                        expiry: ''
                        holdtime: 3600
                        instrument: XAUUSD
                        market: COM
                        openclose: open
                        order_Ref: myref_0001
                        price: 1250
                        product_type: SPOT
                        right: ''
                        stopLossLevel: 1200
                        strike: 0
                        symbol: XAUUSD
                        takeProfitLevel: 1300
                        timestamp: '2020-09-06 13:15:46.500000'
                        trade_ID: '1'
                        volume: 0.01
                        timeinforce: 300
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Error messages
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      operationId: get-pending_trades
      description: This endpoint is used to get your submitted limit orders that are pending to fill.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'execution mode or account type, value either in ''livetest'',''livetrade'''
                accountid:
                  type: string
                  description: ALGOGENE account ID
                token:
                  type: string
                  description: the token obtained via endpoint /session
              required:
                - user
                - api_key
                - runmode
                - accountid
                - token
  /config:
    post:
      summary: Account Configuration
      operationId: post-config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Success messages
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Authorization passed and trading config is updated successfully!
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Error messages
                required:
                  - res
              examples:
                example-1:
                  value:
                    res: Bad input parameters!
                example-2:
                  value:
                    res: 'Missing input! ''broker_api'', ''broker_account'', ''broker_account_type'', ''broker_user'', ''broker_pwd'' cannot be null for IG!'
                example-3:
                  value:
                    res: Fail to connect to OANDA! Probably invalid credential for 'broker_api' or 'broker_account'.
      description: 'This endpoint is used to update or configurate the connection setup of your account. '
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'execution mode or account type, value either in ''livetest'',''livetrade'''
                token:
                  type: string
                  description: the token obtained via endpoint /session
                accountid:
                  type: string
                  description: ALGOGENE account ID
                broker_name:
                  type: string
                  description: 'the broker name to be connected, values either in ''ig'',''oanda'','
                broker_api:
                  type: string
                  description: the API key generated from your broker.
                broker_account:
                  type: string
                  description: the account ID from your broker
                broker_account_type:
                  type: string
                  description: |-
                    For broker_name = 'ig', accepted value 'CFD','MT4'. 

                    It is not required for other brokers.
                broker_user:
                  type: string
                  description: |-
                    For broker_name = 'ig', it is the user name connecting your broker account. 

                    It is not required for other brokers.
                broker_pwd:
                  type: string
                  description: |-
                    For broker_name = 'ig', it is the user password connecting your broker account. 

                    It is not required for other brokers.
              required:
                - user
                - api_key
                - runmode
                - token
                - accountid
                - broker_name
                - broker_api
                - broker_account
      tags:
        - Account
  /close_orders:
    post:
      summary: Close Orders
      operationId: post-close_orders
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: status
                  res:
                    type: string
                    description: system messages
                required:
                  - status
                  - res
              examples:
                example-1:
                  value:
                    status: SUCCESS
                    res: Submitted for BULK_CLOSE
                example-2:
                  value:
                    status: ERROR
                    res: Fail to BULK_CLOSE
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Error messages
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      description: This endpoint is used to close a set of outstanding orders.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'execution mode or account type, value either in ''livetest'',''livetrade'''
                accountid:
                  type: string
                  description: ALGOGENE account ID
                token:
                  type: string
                  description: the token obtained via endpoint /session
                tradeIDs:
                  type: string
                  description: 'the list of ALGOGENE trade IDs that are intended to close, separated by '','''
              required:
                - user
                - api_key
                - runmode
                - accountid
                - token
                - tradeIDs
            examples:
              example-1:
                value:
                  user: demo
                  api_key: qwertyuiopasdfghjklzxcvbnm
                  runmode: livetrade
                  accountid: '1001'
                  token: '123456'
                  tradeIDs: '192,193,194,195,196,197,198,199,200'
              example-2:
                value:
                  user: demo
                  api_key: qwertyuiopasdfghjklzxcvbnm
                  runmode: livetrade
                  accountid: '1001'
                  token: '123456'
                  tradeIDs: '201'
      tags:
        - Orders
  /cancel_orders:
    post:
      summary: Cancel Orders
      operationId: post-cancel_orders
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: status
                  res:
                    type: string
                    description: system messages
                required:
                  - status
                  - res
              examples:
                example-1:
                  value:
                    status: SUCCESS
                    res: Submitted for BULK_CANCEL
                example-2:
                  value:
                    status: ERROR
                    res: Fail to BULK_CANCEL
        '400':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Error messages
                required:
                  - res
              examples:
                example-1:
                  value:
                    res: Bad input parameters!
      tags:
        - Orders
      description: This endpoint is used to cancel a set of unfilled limit orders.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'execution mode or account type, value either in ''livetest'',''livetrade'''
                accountid:
                  type: string
                  description: ALGOGENE account ID
                token:
                  type: string
                  description: the token obtained via endpoint /session
                tradeIDs:
                  type: string
                  description: 'the list of limit orders specified with ALGOGENE trade IDs that are intended to cancel, separated by '','''
              required:
                - user
                - api_key
                - runmode
                - accountid
                - token
                - tradeIDs
            examples:
              example-1:
                value:
                  user: demo
                  api_key: qwertyuiopasdfghjklzxcvbnm
                  runmode: livetrade
                  accountid: '1002'
                  token: '123456'
                  tradeIDs: '192,193,194,195,196,197,198,199,200'
              example-2:
                value:
                  user: demo
                  api_key: qwertyuiopasdfghjklzxcvbnm
                  runmode: livetrade
                  accountid: '1002'
                  token: '123456'
                  tradeIDs: '201'
  /update_opened_order:
    post:
      summary: Update Opened Order
      operationId: post-update_opened_order
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: status
                  res:
                    type: string
                    description: system messages
                required:
                  - status
                  - res
              examples:
                example-1:
                  value:
                    status: SUCCESS
                    res: Submitted for order update!
                example-2:
                  value:
                    status: ERROR
                    res: Fail to update order!
            application/xml:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Error messages
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      description: 'This endpoint is used to update trading parameters of an outstanding/opened order. '
      tags:
        - Orders
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'execution mode or account type, value either in ''livetest'',''livetrade'''
                accountid:
                  type: string
                  description: ALGOGENE account ID
                token:
                  type: string
                  description: the token obtained via endpoint /session
                tradeID:
                  type: string
                  description: ALGOGENE trade ID that can be obtained from /opened_trades
                callback:
                  type: string
                  description: |-
                    update to a new callback url for receiving asynchronized messages. 
                    skip this parameter if no update is required.
                orderRef:
                  type: string
                  description: |-
                    update to a new reference. 
                    skip this parameter if no update is required.
                takeProfitLevel:
                  description: |-
                    update to a new take profit level. 
                    skip this parameter if no update is required.
                  type: number
                stopLossLevel:
                  description: |-
                    update to a new stop loss level. 
                    skip this parameter if no update is required.
                  type: number
                holdtime:
                  description: |-
                    update to a new holding time (unit in number of second). 
                    skip this parameter if no update is required.
                  type: number
              required:
                - user
                - api_key
                - runmode
                - accountid
                - token
                - tradeID
            examples:
              example-1:
                value:
                  user: demo
                  api_key: qwertyuiopasdfghjklzxcvbnm
                  runmode: livetrade
                  accountid: '1002'
                  token: '123456'
                  tradeID: '366'
                  takeProfitLevel: 0.9
                  orderRef: my new reference
  /update_pending_order:
    post:
      summary: Update Pending Order
      operationId: post-update_pending_order
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: status
                  res:
                    type: string
                    description: system messages
                required:
                  - status
                  - res
              examples:
                example-1:
                  value:
                    status: SUCCESS
                    res: Submitted for pending order update!
                example-2:
                  value:
                    status: ERROR
                    res: Fail to update pending order!
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: string
                    description: Error messages
                required:
                  - res
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      tags:
        - Orders
      description: This endpoint is used to update the trading parameters of an unfilled pending/limit order.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'execution mode or account type, value either in ''livetest'',''livetrade'''
                accountid:
                  type: string
                  description: ALGOGENE account ID
                token:
                  type: string
                  description: the token obtained via endpoint /session
                tradeID:
                  type: string
                  description: ALGOGENE trade ID that can be obtained from /pending_trades
                orderRef:
                  type: string
                  description: |-
                    update to a new reference. 
                    skip this parameter if no update is required.
                callback:
                  type: string
                  description: |-
                    update to a new callback url for receiving asynchronized messages. 
                    skip this parameter if no update is required.
                price:
                  type: number
                  description: |-
                    update to a new limit price. 
                    skip this parameter if no update is required.
                takeProfitLevel:
                  type: number
                  description: |-
                    update to a new take profit level when this limit order has been filled. 
                    skip this parameter if no update is required.
                stopLossLevel:
                  type: number
                  description: |-
                    update to a new stop loss level when this limit order has been filled. 
                    skip this parameter if no update is required.
                holdtime:
                  type: integer
                  description: |-
                    update to a new holding time (number of seconds) when this limit order has been filled. 
                    skip this parameter if no update is required.
                timeinforce:
                  type: integer
                  description: |-
                    update to a new time-in-force, where this limit order will be auto-canceled if not filled after waiting for such number of seconds. 
                    skip this parameter if no update is required.
              required:
                - user
                - api_key
                - runmode
                - accountid
                - token
                - tradeID
            examples:
              example-1:
                value:
                  user: demo
                  api_key: qwertyuiopasdfghjklzxcvbnm
                  runmode: livetrade
                  accountid: '1001'
                  token: '123456'
                  tradeID: '403'
                  price: 1.1
                  orderRef: my new reference
  /open_order:
    post:
      summary: Open Order
      operationId: post-open_order
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: system status
                  timestamp_utc:
                    type: string
                    description: 'system update time, format in ''YYYY-MM-DD hh:mm:ss.ffffff'', time zone in UTC'
                required:
                  - status
                  - timestamp_utc
              examples:
                example-1:
                  value:
                    status: PENDING_TO_FILL
                    timestamp_utc: '2020-09-06 06:46:22.504000'
                example-2:
                  value:
                    status: SUCCESS
                    buysell: 1
                    insertTime: '2020-09-06 12:05:26.123000'
                    tradeID: 69
                    callback: 'http://mydomain.com/callback_test'
                    symbol: EURUSD
                    broker: IG
                    expiry: ''
                    instrument: EURUSD
                    fill_price: 1.1797
                    right: ''
                    producttype: SPOT
                    strike: 0
                    orderRef: my order abcd1234
                    fill_volume: 0.01
                    market: FX
                    msg: OPEN_ORDER_FILLED
                example-3:
                  value:
                    stopLossLevel: 0
                    right: ''
                    tradeID: 0
                    ordertype: 0
                    openclose: open
                    producttype: SPOT
                    market: FX
                    instrument: EURUSD
                    takeProfitLevel: 0
                    strike: 0
                    symbol: EURUSD
                    channel: api
                    status: false
                    price: 1.18
                    broker: ALGOGENE
                    orderRef: xxx
                    timeinforce: 3600
                    msg: Opening order is rejected due to insufficient capital.
                    expiry: ''
                    volume: 1000000
                    buysell: 1
                    callback: 'http://mydomain.com/callback_test'
                    holdtime: 0
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  '':
                    type: string
                    description: Error messages
              examples:
                Example:
                  value:
                    res: Bad input parameters!
      tags:
        - Orders
      description: This endpoint is used to open an order.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: your user id generated by ALGOGENE at system registration
                api_key:
                  type: string
                  description: your API key
                runmode:
                  type: string
                  description: 'execution mode or account type, value either in ''livetest'',''livetrade'''
                accountid:
                  type: string
                  description: ALGOGENE account ID
                token:
                  type: string
                  description: the token obtained via endpoint /session
                instrument:
                  type: string
                  description: intended trading instrument name
                expiry:
                  type: string
                  description: 'For FUT/OPT product, specify the contract expiry date'
                right:
                  type: string
                  description: 'For OPT product, specify the option exercise right, ''C'' for call and ''P'' for put'
                strike:
                  type: string
                  description: 'For OPT product, specify the option strike price'
                buysell:
                  type: string
                  description: 'indicate the buy/sell direction, value either in ''BUY'',''SELL'''
                volume:
                  type: string
                  description: intended trading volume in number of lot
                ordertype:
                  type: string
                  description: 'order type, ''MKT'' for market order, ''LMT'' for limit order'
                price:
                  type: number
                  description: 'For limit order, specify the limit price'
                timeinforce:
                  type: integer
                  description: 'For limit order, specify the maximum number of seconds to wait before auto-cancelling the order if not filled'
                takeProfitLevel:
                  type: number
                  description: specify the take profit level if this order has been opened
                stopLossLevel:
                  type: number
                  description: specify the stop loss level if this order has been opened
                holdtime:
                  type: integer
                  description: specify the holding time (in seconds) if this order has been opened
                orderRef:
                  type: string
                  description: your reference/message attached to this order.  ignore if not specified.
                callback:
                  type: string
                  description: 'your callback url that can be publicly accessible, for receiving asynchronized messages. ignore if not specified.'
              required:
                - user
                - api_key
                - runmode
                - accountid
                - token
                - instrument
            examples:
              example-1:
                value:
                  user: demo
                  api_key: qwertyuiopasdfghjklzxcvbnm
                  runmode: livetrade
                  accountid: '1001'
                  token: '123456'
                  instrument: EURUSD
                  buysell: BUY
                  volume: 0.01
                  ordertype: MKT
                  stopLossLevel: 1.1
                  orderRef: my order abcd1234
              example-2:
                value:
                  user: demo
                  api_key: qwertyuiopasdfghjklzxcvbnm
                  runmode: livetest
                  accountid: '1001'
                  token: '123456'
                  instrument: EURUSD
                  buysell: BUY
                  volume: 0.01
                  ordertype: LMT
                  price: 1.18
                  timeinforce: 3600
                  orderRef: my order abcd1234
                  callback: 'http://mydomain.com/callback_test'
              example-3:
                value:
                  user: demo
                  api_key: qwertyuiopasdfghjklzxcvbnm
                  runmode: livetest
                  accountid: '1001'
                  token: '123456'
                  instrument: EURUSD
                  buysell: BUY
                  volume: 1000000
                  ordertype: LMT
                  price: 1.18
                  timeinforce: 3600
                  orderRef: xxx
                  callback: 'http://mydomain.com/callback_test'
        description: 'If you have specified ''callback'', please refer to example-2/example-3 for asynchronized messages that will POST to your callback url.'
components:
  schemas:
    data:
      title: data
      type: object
      x-examples: {}
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: query
security: []
tags:
  - name: Account
  - name: Orders
